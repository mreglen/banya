"""add base_guests and extra_guest_price to baths

Revision ID: f9d12b09821d
Revises: 
Create Date: 2025-09-29 23:14:19.750736

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f9d12b09821d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_services_service_id'), table_name='services')
    op.drop_table('services')
    op.add_column('baths', sa.Column('base_guests', sa.Integer(), nullable=False))
    op.add_column('baths', sa.Column('extra_guest_price', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'photos', 'massages', ['massage_id'], ['massage_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'reservation_brooms', 'reservations', ['reservation_id'], ['reservation_id'])
    op.create_foreign_key(None, 'reservation_menu_items', 'reservations', ['reservation_id'], ['reservation_id'])
    op.add_column('reservations', sa.Column('guests', sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('reservations', 'guests')
    op.drop_constraint(None, 'reservation_menu_items', type_='foreignkey')
    op.drop_constraint(None, 'reservation_brooms', type_='foreignkey')
    op.drop_constraint(None, 'photos', type_='foreignkey')
    op.drop_column('baths', 'extra_guest_price')
    op.drop_column('baths', 'base_guests')
    op.create_table('services',
    sa.Column('service_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('cost', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('service_id', name=op.f('services_pkey'))
    )
    op.create_index(op.f('ix_services_service_id'), 'services', ['service_id'], unique=False)
    # ### end Alembic commands ###
