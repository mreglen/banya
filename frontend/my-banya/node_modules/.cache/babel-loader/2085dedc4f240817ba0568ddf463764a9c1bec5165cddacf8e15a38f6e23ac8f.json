{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khram\\\\Desktop\\\\ilya\\\\banya\\\\frontend\\\\my-banya\\\\src\\\\pages\\\\Admin\\\\Reservations\\\\AdminReservations.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Admin/AdminReservations/AdminReservations.jsx\n\nimport { useState, useMemo } from 'react';\nimport ReservationsFilters from './ReservationsFilters';\nimport BookingDetailsModal from './BookingDetailsModal';\nimport AddBookingModal from './AddBookingModal';\n\n// Моковые данные\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockReservations = [{\n  reservation_id: 1,\n  bath_id: 1,\n  bath_name: \"Кедровая баня\",\n  start_datetime: \"2025-04-05T10:00:00\",\n  end_datetime: \"2025-04-05T12:00:00\",\n  client_name: \"Иван Иванов\",\n  client_phone: \"+7 (999) 123-45-67\",\n  client_email: \"ivan@example.com\",\n  notes: \"Хочу веники\",\n  total_cost: 6000,\n  services: [{\n    service_id: 1,\n    name: \"Веники\",\n    cost: 500,\n    quantity: 2\n  }]\n}, {\n  reservation_id: 2,\n  bath_id: 1,\n  bath_name: \"Кедровая баня\",\n  start_datetime: \"2025-04-05T14:00:00\",\n  end_datetime: \"2025-04-05T15:30:00\",\n  client_name: \"Мария Петрова\",\n  client_phone: \"+7 (987) 654-32-10\",\n  client_email: \"maria@example.com\",\n  notes: \"\",\n  total_cost: 4500,\n  services: []\n}, {\n  reservation_id: 3,\n  bath_id: 2,\n  bath_name: \"Нефритовая баня\",\n  start_datetime: \"2025-04-05T11:00:00\",\n  end_datetime: \"2025-04-05T13:00:00\",\n  client_name: \"Алексей Смирнов\",\n  client_phone: \"+7 (912) 345-67-89\",\n  notes: \"Тихий клиент\",\n  total_cost: 8000,\n  services: []\n}, {\n  reservation_id: 4,\n  bath_id: 3,\n  bath_name: \"Липовая баня\",\n  start_datetime: \"2025-04-05T16:00:00\",\n  end_datetime: \"2025-04-05T18:00:00\",\n  client_name: \"Ольга Кузнецова\",\n  client_phone: \"+7 (921) 234-56-78\",\n  notes: \"\",\n  total_cost: 5000,\n  services: []\n}];\nconst mockBaths = [{\n  bath_id: 1,\n  name: \"Кедровая баня\"\n}, {\n  bath_id: 2,\n  name: \"Нефритовая баня\"\n}, {\n  bath_id: 3,\n  name: \"Липовая баня\"\n}];\nfunction AdminReservations() {\n  _s();\n  const today = new Date().toISOString().split('T')[0];\n  const [filters, setFilters] = useState({\n    date: today\n  });\n  const [selectedBooking, setSelectedBooking] = useState(null);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const handleAddBooking = newBooking => {\n    // Пока просто добавим в моковые данные (для демо)\n    mockReservations.push(newBooking);\n    // Перегруппируем (в реальном приложении — перезагрузка данных)\n    setFilters(prev => ({\n      ...prev\n    })); // триггер для перерендера\n  };\n\n  // Группируем брони по bath_id для текущей даты\n  const groupedReservations = useMemo(() => {\n    const filtered = mockReservations.filter(res => {\n      const resDate = new Date(res.start_datetime).toISOString().split('T')[0];\n      return resDate === filters.date;\n    });\n    return filtered.reduce((acc, res) => {\n      if (!acc[res.bath_id]) {\n        var _mockBaths$find;\n        acc[res.bath_id] = {\n          bathName: res.bath_name || ((_mockBaths$find = mockBaths.find(b => b.bath_id === res.bath_id)) === null || _mockBaths$find === void 0 ? void 0 : _mockBaths$find.name) || `Баня ${res.bath_id}`,\n          bookings: []\n        };\n      }\n      acc[res.bath_id].bookings.push(res);\n      return acc;\n    }, {});\n  }, [filters.date]);\n  const handleApply = filters => {\n    setFilters(filters);\n  };\n  const handleViewBooking = booking => {\n    setSelectedBooking(booking);\n  };\n  const handleEditBooking = booking => {\n    console.log('Редактировать:', booking);\n    setSelectedBooking(null);\n  };\n  const handleDeleteBooking = id => {\n    if (window.confirm('Вы уверены, что хотите удалить эту бронь?')) {\n      setSelectedBooking(null);\n    }\n  };\n  const handleCloseModal = () => {\n    setSelectedBooking(null);\n  };\n\n  // Получаем массив групп для отображения\n  const groupsArray = Object.values(groupedReservations);\n\n  // Генерация временных слотов (общие для всех)\n  const timeSlots = useMemo(() => {\n    if (!filters.date) return [];\n    const slots = [];\n    const startHour = 9;\n    const endHour = 24;\n    for (let hour = startHour; hour < endHour; hour++) {\n      for (let minute of [0, 30]) {\n        const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        const dateTime = new Date(`${filters.date}T${timeStr}:00`);\n        slots.push({\n          time: timeStr,\n          start: dateTime,\n          end: new Date(dateTime.getTime() + 30 * 60000)\n        });\n      }\n    }\n    return slots;\n  }, [filters.date]);\n  const formatTime = date => {\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-800 mb-6\",\n      children: [\"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0438 \\u043D\\u0430 \", new Date(filters.date).toLocaleDateString('ru-RU', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReservationsFilters, {\n      onApply: handleApply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), groupsArray.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-16 text-gray-500 bg-gray-50 rounded-2xl\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u0435\\u0442 \\u0431\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0439 \\u043D\\u0430 \", new Date(filters.date).toLocaleDateString('ru-RU'), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto pb-4 -mx-4 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-flex space-x-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-32 bg-gray-50 p-4 border-r border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-medium text-gray-700 mb-2\",\n            children: \"\\u0412\\u0420\\u0415\\u041C\\u042F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), timeSlots.map((slot, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 py-2\",\n            children: formatTime(slot.start)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), groupsArray.map((group, idx) => {\n          // Нормализуем брони: превращаем строки в объекты Date\n          const normalizedBookings = group.bookings.map(booking => ({\n            ...booking,\n            start: new Date(booking.start_datetime),\n            end: new Date(booking.end_datetime)\n          }));\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0 w-96\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-xl shadow-md border border-gray-200 overflow-hidden\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 border-b border-gray-200 bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold text-gray-800\",\n                  children: group.bathName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overflow-x-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"w-full table-fixed border-separate border-spacing-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    className: \"bg-gray-50\",\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                        children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: timeSlots.map((slot, idx) => {\n                      const overlapping = normalizedBookings.find(res => res.start < slot.end && res.end > slot.start);\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        className: \"border-b border-gray-100 hover:bg-gray-25 transition-colors\",\n                        children: /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"px-6 py-0 h-14 relative bg-gray-50\",\n                          children: overlapping ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"absolute inset-y-0 left-0 right-0 bg-red-50 border border-red-200 text-red-800 text-sm font-medium rounded-lg px-3 flex items-center justify-center cursor-pointer hover:shadow transition-all duration-200 group\",\n                            style: {\n                              top: `${(overlapping.start - slot.start) / (1000 * 60) / 30 * 100}%`,\n                              height: `${(overlapping.end - overlapping.start) / (1000 * 60) / 30 * 100}%`\n                            },\n                            title: `${overlapping.client_name} • ${formatTime(overlapping.start)} – ${formatTime(overlapping.end)}`,\n                            onClick: () => handleViewBooking(overlapping),\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"w-1 bg-red-400 rounded-full absolute left-0 top-1 bottom-1 group-hover:w-2 transition-all duration-200\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 227,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"truncate max-w-full text-center leading-tight font-medium\",\n                              children: overlapping.client_name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 228,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 218,\n                            columnNumber: 37\n                          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"absolute inset-0 flex items-center justify-center text-green-600 text-sm font-medium bg-green-50 rounded-lg border border-green-200\",\n                            children: \"\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 233,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 33\n                        }, this)\n                      }, idx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 31\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BookingDetailsModal, {\n      booking: selectedBooking,\n      onClose: handleCloseModal,\n      onEdit: handleEditBooking,\n      onDelete: handleDeleteBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminReservations, \"Vm+4NKwGxpycArj/THp//H1186A=\");\n_c = AdminReservations;\nexport default AdminReservations;\nvar _c;\n$RefreshReg$(_c, \"AdminReservations\");","map":{"version":3,"names":["useState","useMemo","ReservationsFilters","BookingDetailsModal","AddBookingModal","jsxDEV","_jsxDEV","mockReservations","reservation_id","bath_id","bath_name","start_datetime","end_datetime","client_name","client_phone","client_email","notes","total_cost","services","service_id","name","cost","quantity","mockBaths","AdminReservations","_s","today","Date","toISOString","split","filters","setFilters","date","selectedBooking","setSelectedBooking","isAddModalOpen","setIsAddModalOpen","handleAddBooking","newBooking","push","prev","groupedReservations","filtered","filter","res","resDate","reduce","acc","_mockBaths$find","bathName","find","b","bookings","handleApply","handleViewBooking","booking","handleEditBooking","console","log","handleDeleteBooking","id","window","confirm","handleCloseModal","groupsArray","Object","values","timeSlots","slots","startHour","endHour","hour","minute","timeStr","toString","padStart","dateTime","time","start","end","getTime","formatTime","toLocaleTimeString","children","className","toLocaleDateString","day","month","year","fileName","_jsxFileName","lineNumber","columnNumber","onApply","length","map","slot","idx","group","normalizedBookings","overlapping","style","top","height","title","onClick","onClose","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/khram/Desktop/ilya/banya/frontend/my-banya/src/pages/Admin/Reservations/AdminReservations.jsx"],"sourcesContent":["// src/pages/Admin/AdminReservations/AdminReservations.jsx\r\n\r\nimport { useState, useMemo } from 'react';\r\nimport ReservationsFilters from './ReservationsFilters';\r\nimport BookingDetailsModal from './BookingDetailsModal';\r\nimport AddBookingModal from './AddBookingModal';\r\n\r\n// Моковые данные\r\nconst mockReservations = [\r\n  {\r\n    reservation_id: 1,\r\n    bath_id: 1,\r\n    bath_name: \"Кедровая баня\",\r\n    start_datetime: \"2025-04-05T10:00:00\",\r\n    end_datetime: \"2025-04-05T12:00:00\",\r\n    client_name: \"Иван Иванов\",\r\n    client_phone: \"+7 (999) 123-45-67\",\r\n    client_email: \"ivan@example.com\",\r\n    notes: \"Хочу веники\",\r\n    total_cost: 6000,\r\n    services: [\r\n      { service_id: 1, name: \"Веники\", cost: 500, quantity: 2 }\r\n    ]\r\n  },\r\n  {\r\n    reservation_id: 2,\r\n    bath_id: 1,\r\n    bath_name: \"Кедровая баня\",\r\n    start_datetime: \"2025-04-05T14:00:00\",\r\n    end_datetime: \"2025-04-05T15:30:00\",\r\n    client_name: \"Мария Петрова\",\r\n    client_phone: \"+7 (987) 654-32-10\",\r\n    client_email: \"maria@example.com\",\r\n    notes: \"\",\r\n    total_cost: 4500,\r\n    services: []\r\n  },\r\n  {\r\n    reservation_id: 3,\r\n    bath_id: 2,\r\n    bath_name: \"Нефритовая баня\",\r\n    start_datetime: \"2025-04-05T11:00:00\",\r\n    end_datetime: \"2025-04-05T13:00:00\",\r\n    client_name: \"Алексей Смирнов\",\r\n    client_phone: \"+7 (912) 345-67-89\",\r\n    notes: \"Тихий клиент\",\r\n    total_cost: 8000,\r\n    services: []\r\n  },\r\n  {\r\n    reservation_id: 4,\r\n    bath_id: 3,\r\n    bath_name: \"Липовая баня\",\r\n    start_datetime: \"2025-04-05T16:00:00\",\r\n    end_datetime: \"2025-04-05T18:00:00\",\r\n    client_name: \"Ольга Кузнецова\",\r\n    client_phone: \"+7 (921) 234-56-78\",\r\n    notes: \"\",\r\n    total_cost: 5000,\r\n    services: []\r\n  }\r\n];\r\n\r\nconst mockBaths = [\r\n  { bath_id: 1, name: \"Кедровая баня\" },\r\n  { bath_id: 2, name: \"Нефритовая баня\" },\r\n  { bath_id: 3, name: \"Липовая баня\" },\r\n];\r\n\r\nfunction AdminReservations() {\r\n  const today = new Date().toISOString().split('T')[0];\r\n  const [filters, setFilters] = useState({ date: today });\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n\r\n  const handleAddBooking = (newBooking) => {\r\n    // Пока просто добавим в моковые данные (для демо)\r\n    mockReservations.push(newBooking);\r\n    // Перегруппируем (в реальном приложении — перезагрузка данных)\r\n    setFilters(prev => ({ ...prev })); // триггер для перерендера\r\n  };\r\n\r\n  // Группируем брони по bath_id для текущей даты\r\n  const groupedReservations = useMemo(() => {\r\n    const filtered = mockReservations.filter(res => {\r\n      const resDate = new Date(res.start_datetime).toISOString().split('T')[0];\r\n      return resDate === filters.date;\r\n    });\r\n\r\n    return filtered.reduce((acc, res) => {\r\n      if (!acc[res.bath_id]) {\r\n        acc[res.bath_id] = {\r\n          bathName: res.bath_name || mockBaths.find(b => b.bath_id === res.bath_id)?.name || `Баня ${res.bath_id}`,\r\n          bookings: [],\r\n        };\r\n      }\r\n      acc[res.bath_id].bookings.push(res);\r\n      return acc;\r\n    }, {});\r\n  }, [filters.date]);\r\n\r\n  const handleApply = (filters) => {\r\n    setFilters(filters);\r\n  };\r\n\r\n  const handleViewBooking = (booking) => {\r\n    setSelectedBooking(booking);\r\n  };\r\n\r\n  const handleEditBooking = (booking) => {\r\n    console.log('Редактировать:', booking);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleDeleteBooking = (id) => {\r\n    if (window.confirm('Вы уверены, что хотите удалить эту бронь?')) {\r\n      setSelectedBooking(null);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  // Получаем массив групп для отображения\r\n  const groupsArray = Object.values(groupedReservations);\r\n\r\n  // Генерация временных слотов (общие для всех)\r\n  const timeSlots = useMemo(() => {\r\n    if (!filters.date) return [];\r\n    const slots = [];\r\n    const startHour = 9;\r\n    const endHour = 24;\r\n\r\n    for (let hour = startHour; hour < endHour; hour++) {\r\n      for (let minute of [0, 30]) {\r\n        const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n        const dateTime = new Date(`${filters.date}T${timeStr}:00`);\r\n        slots.push({\r\n          time: timeStr,\r\n          start: dateTime,\r\n          end: new Date(dateTime.getTime() + 30 * 60000),\r\n        });\r\n      }\r\n    }\r\n    return slots;\r\n  }, [filters.date]);\r\n\r\n  const formatTime = (date) => {\r\n    return date.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 👇 Обновлённый заголовок с датой */}\r\n      <h2 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n        Записи на {new Date(filters.date).toLocaleDateString('ru-RU', {\r\n          day: 'numeric',\r\n          month: 'long',\r\n          year: 'numeric',\r\n        })}\r\n      </h2>\r\n\r\n      <ReservationsFilters onApply={handleApply} />\r\n\r\n      {groupsArray.length === 0 ? (\r\n        <div className=\"text-center py-16 text-gray-500 bg-gray-50 rounded-2xl\">\r\n          <p>Нет бронирований на {new Date(filters.date).toLocaleDateString('ru-RU')}.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"overflow-x-auto pb-4 -mx-4 px-4\">\r\n          <div className=\"inline-flex space-x-6\">\r\n            {/* Колонка времени */}\r\n            <div className=\"flex-shrink-0 w-32 bg-gray-50 p-4 border-r border-gray-200\">\r\n              <div className=\"text-sm font-medium text-gray-700 mb-2\">ВРЕМЯ</div>\r\n              {timeSlots.map((slot, idx) => (\r\n                <div key={idx} className=\"text-sm text-gray-600 py-2\">\r\n                  {formatTime(slot.start)}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Колонки с банями — 👉 УВЕЛИЧИЛИ ШИРИНУ */}\r\n            {groupsArray.map((group, idx) => {\r\n              // Нормализуем брони: превращаем строки в объекты Date\r\n              const normalizedBookings = group.bookings.map(booking => ({\r\n                ...booking,\r\n                start: new Date(booking.start_datetime),\r\n                end: new Date(booking.end_datetime),\r\n              }));\r\n\r\n              return (\r\n                <div key={idx} className=\"flex-shrink-0 w-96\"> {/* 👈 Было w-80, стало w-96 */}\r\n                  <div className=\"bg-white rounded-xl shadow-md border border-gray-200 overflow-hidden\">\r\n                    <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\r\n                      {/* 👇 Убрали дату из заголовка бани */}\r\n                      <h3 className=\"text-lg font-semibold text-gray-800\">{group.bathName}</h3>\r\n                    </div>\r\n                    <div className=\"overflow-x-auto\">\r\n                      <table className=\"w-full table-fixed border-separate border-spacing-0\">\r\n                        <thead className=\"bg-gray-50\">\r\n                          <tr>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                              Статус\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {timeSlots.map((slot, idx) => {\r\n                            const overlapping = normalizedBookings.find((res) =>\r\n                              res.start < slot.end && res.end > slot.start\r\n                            );\r\n\r\n                            return (\r\n                              <tr key={idx} className=\"border-b border-gray-100 hover:bg-gray-25 transition-colors\">\r\n                                <td className=\"px-6 py-0 h-14 relative bg-gray-50\">\r\n                                  {overlapping ? (\r\n                                    <div\r\n                                      className=\"absolute inset-y-0 left-0 right-0 bg-red-50 border border-red-200 text-red-800 text-sm font-medium rounded-lg px-3 flex items-center justify-center cursor-pointer hover:shadow transition-all duration-200 group\"\r\n                                      style={{\r\n                                        top: `${((overlapping.start - slot.start) / (1000 * 60)) / 30 * 100}%`,\r\n                                        height: `${((overlapping.end - overlapping.start) / (1000 * 60)) / 30 * 100}%`,\r\n                                      }}\r\n                                      title={`${overlapping.client_name} • ${formatTime(overlapping.start)} – ${formatTime(overlapping.end)}`}\r\n                                      onClick={() => handleViewBooking(overlapping)}\r\n                                    >\r\n                                      <div className=\"w-1 bg-red-400 rounded-full absolute left-0 top-1 bottom-1 group-hover:w-2 transition-all duration-200\"></div>\r\n                                      <span className=\"truncate max-w-full text-center leading-tight font-medium\">\r\n                                        {overlapping.client_name}\r\n                                      </span>\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div className=\"absolute inset-0 flex items-center justify-center text-green-600 text-sm font-medium bg-green-50 rounded-lg border border-green-200\">\r\n                                      Свободно\r\n                                    </div>\r\n                                  )}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <BookingDetailsModal\r\n        booking={selectedBooking}\r\n        onClose={handleCloseModal}\r\n        onEdit={handleEditBooking}\r\n        onDelete={handleDeleteBooking}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminReservations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}