{"ast":null,"code":"// redux/slices/apiSlice.js\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://127.0.0.1:8000/api'\n  }),\n  tagTypes: ['Baths', 'Bookings'],\n  endpoints: builder => ({\n    getBaths: builder.query({\n      query: () => '/baths/',\n      transformResponse: response => {\n        if (!Array.isArray(response)) {\n          console.error('Expected array, got:', response);\n          return [];\n        }\n        return response.map(bath => {\n          var _bath$photos, _bath$photos$;\n          const bathId = bath.bath_id;\n          if (!bathId) {\n            console.warn('Bath without bath_id:', bath);\n            return null;\n          }\n          return {\n            ...bath,\n            bath_id: bathId,\n            image: ((_bath$photos = bath.photos) === null || _bath$photos === void 0 ? void 0 : (_bath$photos$ = _bath$photos[0]) === null || _bath$photos$ === void 0 ? void 0 : _bath$photos$.image_url) || '/img/placeholder.jpg',\n            path: `/baths/${bathId}`,\n            subtitle: bath.title\n          };\n        }).filter(Boolean);\n      },\n      providesTags: ['Baths']\n    }),\n    getBathById: builder.query({\n      query: id => `/baths/${id}`,\n      transformResponse: response => {\n        var _response$photos, _response$photos$, _response$photos2;\n        if (!response) return null;\n        return {\n          ...response,\n          bath_id: response.bath_id,\n          image: ((_response$photos = response.photos) === null || _response$photos === void 0 ? void 0 : (_response$photos$ = _response$photos[0]) === null || _response$photos$ === void 0 ? void 0 : _response$photos$.image_url) || '/img/placeholder.jpg',\n          images: ((_response$photos2 = response.photos) === null || _response$photos2 === void 0 ? void 0 : _response$photos2.map(p => p.image_url)) || [],\n          path: `/baths/${response.bath_id}`,\n          subtitle: response.title\n        };\n      },\n      providesTags: ['Bath']\n    })\n  })\n});\nexport const {\n  useGetBathsQuery,\n  useGetBathByIdQuery\n} = apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getBaths","query","transformResponse","response","Array","isArray","console","error","map","bath","_bath$photos","_bath$photos$","bathId","bath_id","warn","image","photos","image_url","path","subtitle","title","filter","Boolean","providesTags","getBathById","id","_response$photos","_response$photos$","_response$photos2","images","p","useGetBathsQuery","useGetBathByIdQuery"],"sources":["E:/ilya/banya/frontend/my-banya/src/redux/slices/apiSlice.js"],"sourcesContent":["// redux/slices/apiSlice.js\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: 'api',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://127.0.0.1:8000/api' }),\r\n  tagTypes: ['Baths', 'Bookings'],\r\n  endpoints: (builder) => ({\r\n   \r\n    getBaths: builder.query({\r\n      query: () => '/baths/',\r\n      transformResponse: (response) => {\r\n        \r\n        if (!Array.isArray(response)) {\r\n          console.error('Expected array, got:', response);\r\n          return [];\r\n        }\r\n\r\n        return response.map(bath => {\r\n        \r\n          const bathId = bath.bath_id;\r\n\r\n         \r\n          if (!bathId) {\r\n            console.warn('Bath without bath_id:', bath);\r\n            return null;\r\n          }\r\n\r\n          return {\r\n            ...bath,\r\n            bath_id: bathId, \r\n            image: bath.photos?.[0]?.image_url || '/img/placeholder.jpg',\r\n            path: `/baths/${bathId}`,\r\n            subtitle: bath.title,\r\n          };\r\n        }).filter(Boolean); \r\n      },\r\n      providesTags: ['Baths'],\r\n    }),\r\n\r\n    \r\n    getBathById: builder.query({\r\n      query: (id) => `/baths/${id}`,\r\n      transformResponse: (response) => {\r\n        if (!response) return null;\r\n\r\n        return {\r\n          ...response,\r\n          bath_id: response.bath_id,\r\n          image: response.photos?.[0]?.image_url || '/img/placeholder.jpg',\r\n          images: response.photos?.map(p => p.image_url) || [],\r\n          path: `/baths/${response.bath_id}`,\r\n          subtitle: response.title,\r\n        };\r\n      },\r\n      providesTags: ['Bath'],\r\n    }),\r\n\r\n    \r\n  }),\r\n});\r\n\r\nexport const { \r\n  useGetBathsQuery, \r\n  useGetBathByIdQuery\r\n} = apiSlice;"],"mappings":"AAAA;AACA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAA4B,CAAC,CAAC;EACnEC,QAAQ,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC;EAC/BC,SAAS,EAAGC,OAAO,KAAM;IAEvBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACtBA,KAAK,EAAEA,CAAA,KAAM,SAAS;MACtBC,iBAAiB,EAAGC,QAAQ,IAAK;QAE/B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;UAC5BG,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEJ,QAAQ,CAAC;UAC/C,OAAO,EAAE;QACX;QAEA,OAAOA,QAAQ,CAACK,GAAG,CAACC,IAAI,IAAI;UAAA,IAAAC,YAAA,EAAAC,aAAA;UAE1B,MAAMC,MAAM,GAAGH,IAAI,CAACI,OAAO;UAG3B,IAAI,CAACD,MAAM,EAAE;YACXN,OAAO,CAACQ,IAAI,CAAC,uBAAuB,EAAEL,IAAI,CAAC;YAC3C,OAAO,IAAI;UACb;UAEA,OAAO;YACL,GAAGA,IAAI;YACPI,OAAO,EAAED,MAAM;YACfG,KAAK,EAAE,EAAAL,YAAA,GAAAD,IAAI,CAACO,MAAM,cAAAN,YAAA,wBAAAC,aAAA,GAAXD,YAAA,CAAc,CAAC,CAAC,cAAAC,aAAA,uBAAhBA,aAAA,CAAkBM,SAAS,KAAI,sBAAsB;YAC5DC,IAAI,EAAE,UAAUN,MAAM,EAAE;YACxBO,QAAQ,EAAEV,IAAI,CAACW;UACjB,CAAC;QACH,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;MACpB,CAAC;MACDC,YAAY,EAAE,CAAC,OAAO;IACxB,CAAC,CAAC;IAGFC,WAAW,EAAEzB,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAGwB,EAAE,IAAK,UAAUA,EAAE,EAAE;MAC7BvB,iBAAiB,EAAGC,QAAQ,IAAK;QAAA,IAAAuB,gBAAA,EAAAC,iBAAA,EAAAC,iBAAA;QAC/B,IAAI,CAACzB,QAAQ,EAAE,OAAO,IAAI;QAE1B,OAAO;UACL,GAAGA,QAAQ;UACXU,OAAO,EAAEV,QAAQ,CAACU,OAAO;UACzBE,KAAK,EAAE,EAAAW,gBAAA,GAAAvB,QAAQ,CAACa,MAAM,cAAAU,gBAAA,wBAAAC,iBAAA,GAAfD,gBAAA,CAAkB,CAAC,CAAC,cAAAC,iBAAA,uBAApBA,iBAAA,CAAsBV,SAAS,KAAI,sBAAsB;UAChEY,MAAM,EAAE,EAAAD,iBAAA,GAAAzB,QAAQ,CAACa,MAAM,cAAAY,iBAAA,uBAAfA,iBAAA,CAAiBpB,GAAG,CAACsB,CAAC,IAAIA,CAAC,CAACb,SAAS,CAAC,KAAI,EAAE;UACpDC,IAAI,EAAE,UAAUf,QAAQ,CAACU,OAAO,EAAE;UAClCM,QAAQ,EAAEhB,QAAQ,CAACiB;QACrB,CAAC;MACH,CAAC;MACDG,YAAY,EAAE,CAAC,MAAM;IACvB,CAAC;EAGH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXQ,gBAAgB;EAChBC;AACF,CAAC,GAAGvC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}