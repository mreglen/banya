{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://127.0.0.1:8000/api'\n  }),\n  endpoints: builder => ({\n    getBaths: builder.query({\n      query: () => '/baths/',\n      transformResponse: response => {\n        return response.map(bath => {\n          var _bath$images;\n          return {\n            ...bath,\n            image: bath.image ? `http://127.0.0.1:8000${bath.image}` : '/img/placeholder.jpg',\n            images: ((_bath$images = bath.images) === null || _bath$images === void 0 ? void 0 : _bath$images.map(img => `http://127.0.0.1:8000${img}`)) || []\n          };\n        });\n      },\n      providesTags: ['Baths']\n    }),\n    getBathById: builder.query({\n      query: id => `/baths/${id}`,\n      transformResponse: response => {\n        var _response$images;\n        return {\n          ...response,\n          image: response.image ? `http://127.0.0.1:8000${response.image}` : '/img/placeholder.jpg',\n          images: ((_response$images = response.images) === null || _response$images === void 0 ? void 0 : _response$images.map(img => `http://127.0.0.1:8000${img}`)) || []\n        };\n      },\n      providesTags: ['Bath']\n    })\n  })\n});\nexport const {\n  useGetBathsQuery,\n  useGetBathByIdQuery\n} = apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","endpoints","builder","getBaths","query","transformResponse","response","map","bath","_bath$images","image","images","img","providesTags","getBathById","id","_response$images","useGetBathsQuery","useGetBathByIdQuery"],"sources":["E:/ilya/banya/frontend/my-banya/src/redux/slices/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: 'api',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://127.0.0.1:8000/api' }),\r\n  endpoints: (builder) => ({\r\n    getBaths: builder.query({\r\n      query: () => '/baths/',\r\n      transformResponse: (response) => {\r\n        return response.map(bath => ({\r\n          ...bath,\r\n          image: bath.image ? `http://127.0.0.1:8000${bath.image}` : '/img/placeholder.jpg',\r\n          images: bath.images?.map(img => `http://127.0.0.1:8000${img}`) || [],\r\n        }));\r\n      },\r\n      providesTags: ['Baths'],\r\n    }),\r\n\r\n    \r\n    getBathById: builder.query({\r\n      query: (id) => `/baths/${id}`,\r\n      transformResponse: (response) => {\r\n        return {\r\n          ...response,\r\n          image: response.image ? `http://127.0.0.1:8000${response.image}` : '/img/placeholder.jpg',\r\n          images: response.images?.map(img => `http://127.0.0.1:8000${img}`) || [],\r\n        };\r\n      },\r\n      providesTags: ['Bath'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetBathsQuery, useGetBathByIdQuery } = apiSlice;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAA4B,CAAC,CAAC;EACnEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACtBA,KAAK,EAAEA,CAAA,KAAM,SAAS;MACtBC,iBAAiB,EAAGC,QAAQ,IAAK;QAC/B,OAAOA,QAAQ,CAACC,GAAG,CAACC,IAAI;UAAA,IAAAC,YAAA;UAAA,OAAK;YAC3B,GAAGD,IAAI;YACPE,KAAK,EAAEF,IAAI,CAACE,KAAK,GAAG,wBAAwBF,IAAI,CAACE,KAAK,EAAE,GAAG,sBAAsB;YACjFC,MAAM,EAAE,EAAAF,YAAA,GAAAD,IAAI,CAACG,MAAM,cAAAF,YAAA,uBAAXA,YAAA,CAAaF,GAAG,CAACK,GAAG,IAAI,wBAAwBA,GAAG,EAAE,CAAC,KAAI;UACpE,CAAC;QAAA,CAAC,CAAC;MACL,CAAC;MACDC,YAAY,EAAE,CAAC,OAAO;IACxB,CAAC,CAAC;IAGFC,WAAW,EAAEZ,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAGW,EAAE,IAAK,UAAUA,EAAE,EAAE;MAC7BV,iBAAiB,EAAGC,QAAQ,IAAK;QAAA,IAAAU,gBAAA;QAC/B,OAAO;UACL,GAAGV,QAAQ;UACXI,KAAK,EAAEJ,QAAQ,CAACI,KAAK,GAAG,wBAAwBJ,QAAQ,CAACI,KAAK,EAAE,GAAG,sBAAsB;UACzFC,MAAM,EAAE,EAAAK,gBAAA,GAAAV,QAAQ,CAACK,MAAM,cAAAK,gBAAA,uBAAfA,gBAAA,CAAiBT,GAAG,CAACK,GAAG,IAAI,wBAAwBA,GAAG,EAAE,CAAC,KAAI;QACxE,CAAC;MACH,CAAC;MACDC,YAAY,EAAE,CAAC,MAAM;IACvB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,gBAAgB;EAAEC;AAAoB,CAAC,GAAGrB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}