{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khram\\\\Desktop\\\\ilya\\\\banya\\\\frontend\\\\my-banya\\\\src\\\\pages\\\\Admin\\\\Reservations\\\\AdminReservations.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Admin/AdminReservations/AdminReservations.jsx\n\nimport { useState, useMemo } from 'react';\nimport ReservationsFilters from '../Reservations/ReservationsFilters';\nimport BookingDetailsModal from '../Reservations/BookingDetailsModal';\nimport AddBookingModal from '../Reservations/AddBookingModal';\nimport { useGetBathsQuery, useGetReservationsByDateQuery } from '../../../redux/slices/apiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminReservations() {\n  _s();\n  const today = new Date().toISOString().split('T')[0];\n  const [filters, setFilters] = useState({\n    date: today\n  });\n  const [selectedBooking, setSelectedBooking] = useState(null);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const {\n    baths = [],\n    isLoading: isLoadingBaths\n  } = useGetBathsQuery();\n  const {\n    data: reservations = [],\n    isLoading: isLoadingReservations,\n    error,\n    isError\n  } = useGetReservationsByDateQuery({\n    date: filters.date || today\n  }, {\n    skip: !filters.date,\n    // ← не запрашивать, если дата пустая\n    refetchOnMountOrArgChange: false // ← не перезапрашивать при монтировании\n  });\n\n  // Генерация временных слотов\n  const timeSlots = useMemo(() => {\n    if (!filters.date) return [];\n    const slots = [];\n    const startHour = 9;\n    const endHour = 24;\n    for (let hour = startHour; hour < endHour; hour++) {\n      for (let minute of [0, 30]) {\n        const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        const dateTime = new Date(`${filters.date}T${timeStr}:00`);\n        slots.push({\n          time: timeStr,\n          start: dateTime,\n          end: new Date(dateTime.getTime() + 30 * 60000)\n        });\n      }\n    }\n    return slots;\n  }, [filters.date]);\n\n  // Отображаем все бани + их брони\n  const bathsToDisplay = useMemo(() => {\n    if (!baths || baths.length === 0) return [];\n    return baths.map(bath => {\n      // ✅ Используем reservations из API\n      const bookings = reservations.filter(res => {\n        const resDate = new Date(res.start_datetime).toISOString().split('T')[0];\n        return res.bath_id === bath.bath_id && resDate === filters.date;\n      });\n      return {\n        bath_id: bath.bath_id,\n        bathName: bath.name,\n        bookings: bookings\n      };\n    });\n  }, [filters.date, baths, reservations]);\n  const handleApply = filters => {\n    setFilters(filters);\n  };\n  const handleViewBooking = booking => {\n    setSelectedBooking(booking);\n  };\n  const handleEditBooking = booking => {\n    console.log('Редактировать:', booking);\n    setSelectedBooking(null);\n  };\n  const handleDeleteBooking = id => {\n    if (window.confirm('Вы уверены, что хотите удалить эту бронь?')) {\n      setSelectedBooking(null);\n    }\n  };\n  const handleCloseModal = () => {\n    setSelectedBooking(null);\n  };\n  const handleAddBooking = newBooking => {\n    // Пока оставим мок — на следующем этапе заменим на мутацию\n    newBooking.reservation_id = newBooking.reservation_id || Date.now();\n    // mockReservations.push(newBooking); // ❌ Удалим позже\n    setFilters(prev => ({\n      ...prev\n    }));\n    setIsAddModalOpen(false);\n  };\n  const formatTime = date => {\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // ✅ Ждём загрузки и бань, и броней\n  if (isLoadingBaths || isLoadingReservations) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-16\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n  if (isError && error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-red-50 border border-red-200 rounded-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-red-800\",\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-700 mt-2\",\n        children: error.status === 401 ? 'Не авторизован. Пожалуйста, войдите снова.' : error.message || 'Произошла ошибка'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), error.status === 401 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.removeItem('access_token');\n          window.location.href = '/admin/login';\n        },\n        className: \"mt-4 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\",\n        children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043B\\u043E\\u0433\\u0438\\u043D\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-800 mb-6\",\n      children: [\"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0438 \\u043D\\u0430 \", new Date(filters.date).toLocaleDateString('ru-RU', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReservationsFilters, {\n      onApply: handleApply,\n      onAddBooking: () => setIsAddModalOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto pb-4 -mx-4 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-flex space-x-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-32 bg-gray-50 p-4 border-r border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-medium text-gray-700 mb-2\",\n            children: \"\\u0412\\u0420\\u0415\\u041C\\u042F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), timeSlots.map((slot, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 py-2\",\n            children: formatTime(slot.start)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), bathsToDisplay.map((bath, idx) => {\n          const hasBookings = bath.bookings.length > 0;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0 w-96\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-xl shadow-md border border-gray-200 overflow-hidden\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 border-b border-gray-200 bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold text-gray-800\",\n                  children: bath.bathName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), hasBookings ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overflow-x-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"w-full table-fixed border-separate border-spacing-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    className: \"bg-gray-50\",\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                        children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: timeSlots.map((slot, idx) => {\n                      const normalizedBookings = bath.bookings.map(booking => ({\n                        ...booking,\n                        start: new Date(booking.start_datetime),\n                        end: new Date(booking.end_datetime)\n                      }));\n                      const overlapping = normalizedBookings.find(res => res.start < slot.end && res.end > slot.start);\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        className: \"border-b border-gray-100 hover:bg-gray-25 transition-colors\",\n                        children: /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"px-6 py-0 h-14 relative bg-gray-50\",\n                          children: overlapping ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"absolute inset-y-0 left-0 right-0 bg-red-50 border border-red-200 text-red-800 text-sm font-medium rounded-lg px-3 flex items-center justify-center cursor-pointer hover:shadow transition-all duration-200 group\",\n                            style: {\n                              top: `${(overlapping.start - slot.start) / (1000 * 60) / 30 * 100}%`,\n                              height: `${(overlapping.end - overlapping.start) / (1000 * 60) / 30 * 100}%`\n                            },\n                            title: `${overlapping.client_name} • ${formatTime(overlapping.start)} – ${formatTime(overlapping.end)}`,\n                            onClick: () => handleViewBooking(overlapping),\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"w-1 bg-red-400 rounded-full absolute left-0 top-1 bottom-1 group-hover:w-2 transition-all duration-200\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 208,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"truncate max-w-full text-center leading-tight font-medium\",\n                              children: overlapping.client_name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 209,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 199,\n                            columnNumber: 37\n                          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"absolute inset-0 flex items-center justify-center text-green-600 text-sm font-medium bg-green-50 rounded-lg border border-green-200\",\n                            children: \"\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 214,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 197,\n                          columnNumber: 33\n                        }, this)\n                      }, idx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 31\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-full flex items-center justify-center p-8\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center text-gray-500 py-10 bg-gray-50 rounded-lg w-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"mx-auto h-12 w-12 text-gray-400 mb-4\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: \"2\",\n                      d: \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-lg font-medium\",\n                    children: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm mt-1\",\n                    children: [\"\\u041D\\u0430 \\u044D\\u0442\\u0443 \\u0434\\u0430\\u0442\\u0443 \\u0434\\u043B\\u044F \\u0431\\u0430\\u043D\\u0438 \\\"\", bath.bathName, \"\\\" \\u0431\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)\n          }, bath.bath_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookingDetailsModal, {\n      booking: selectedBooking,\n      onClose: handleCloseModal,\n      onEdit: handleEditBooking,\n      onDelete: handleDeleteBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddBookingModal, {\n      isOpen: isAddModalOpen,\n      onClose: () => setIsAddModalOpen(false),\n      onAdd: handleAddBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminReservations, \"Js1pUu2J/gI34/fJH0+6VZZc4mo=\", false, function () {\n  return [useGetBathsQuery, useGetReservationsByDateQuery];\n});\n_c = AdminReservations;\nexport default AdminReservations;\nvar _c;\n$RefreshReg$(_c, \"AdminReservations\");","map":{"version":3,"names":["useState","useMemo","ReservationsFilters","BookingDetailsModal","AddBookingModal","useGetBathsQuery","useGetReservationsByDateQuery","jsxDEV","_jsxDEV","AdminReservations","_s","today","Date","toISOString","split","filters","setFilters","date","selectedBooking","setSelectedBooking","isAddModalOpen","setIsAddModalOpen","baths","isLoading","isLoadingBaths","data","reservations","isLoadingReservations","error","isError","skip","refetchOnMountOrArgChange","timeSlots","slots","startHour","endHour","hour","minute","timeStr","toString","padStart","dateTime","push","time","start","end","getTime","bathsToDisplay","length","map","bath","bookings","filter","res","resDate","start_datetime","bath_id","bathName","name","handleApply","handleViewBooking","booking","handleEditBooking","console","log","handleDeleteBooking","id","window","confirm","handleCloseModal","handleAddBooking","newBooking","reservation_id","now","prev","formatTime","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","message","onClick","localStorage","removeItem","location","href","toLocaleDateString","day","month","year","onApply","onAddBooking","slot","idx","hasBookings","normalizedBookings","end_datetime","overlapping","find","style","top","height","title","client_name","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClose","onEdit","onDelete","isOpen","onAdd","_c","$RefreshReg$"],"sources":["C:/Users/khram/Desktop/ilya/banya/frontend/my-banya/src/pages/Admin/Reservations/AdminReservations.jsx"],"sourcesContent":["// src/pages/Admin/AdminReservations/AdminReservations.jsx\r\n\r\nimport { useState, useMemo } from 'react';\r\nimport ReservationsFilters from '../Reservations/ReservationsFilters';\r\nimport BookingDetailsModal from '../Reservations/BookingDetailsModal';\r\nimport AddBookingModal from '../Reservations/AddBookingModal';\r\nimport { useGetBathsQuery, useGetReservationsByDateQuery } from '../../../redux/slices/apiSlice';\r\n\r\nfunction AdminReservations() {\r\n  const today = new Date().toISOString().split('T')[0];\r\n  const [filters, setFilters] = useState({ date: today });\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n\r\n  const { baths = [], isLoading: isLoadingBaths } = useGetBathsQuery();\r\n  const {\r\n    data: reservations = [],\r\n    isLoading: isLoadingReservations,\r\n    error,\r\n    isError\r\n  } = useGetReservationsByDateQuery(\r\n    { date: filters.date || today },\r\n    {\r\n      skip: !filters.date,  // ← не запрашивать, если дата пустая\r\n      refetchOnMountOrArgChange: false  // ← не перезапрашивать при монтировании\r\n    }\r\n  );\r\n\r\n  // Генерация временных слотов\r\n  const timeSlots = useMemo(() => {\r\n    if (!filters.date) return [];\r\n    const slots = [];\r\n    const startHour = 9;\r\n    const endHour = 24;\r\n\r\n    for (let hour = startHour; hour < endHour; hour++) {\r\n      for (let minute of [0, 30]) {\r\n        const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n        const dateTime = new Date(`${filters.date}T${timeStr}:00`);\r\n        slots.push({\r\n          time: timeStr,\r\n          start: dateTime,\r\n          end: new Date(dateTime.getTime() + 30 * 60000),\r\n        });\r\n      }\r\n    }\r\n    return slots;\r\n  }, [filters.date]);\r\n\r\n  // Отображаем все бани + их брони\r\n  const bathsToDisplay = useMemo(() => {\r\n    if (!baths || baths.length === 0) return [];\r\n\r\n    return baths.map(bath => {\r\n      // ✅ Используем reservations из API\r\n      const bookings = reservations.filter(res => {\r\n        const resDate = new Date(res.start_datetime).toISOString().split('T')[0];\r\n        return res.bath_id === bath.bath_id && resDate === filters.date;\r\n      });\r\n\r\n      return {\r\n        bath_id: bath.bath_id,\r\n        bathName: bath.name,\r\n        bookings: bookings,\r\n      };\r\n    });\r\n  }, [filters.date, baths, reservations]);\r\n\r\n  const handleApply = (filters) => {\r\n    setFilters(filters);\r\n  };\r\n\r\n  const handleViewBooking = (booking) => {\r\n    setSelectedBooking(booking);\r\n  };\r\n\r\n  const handleEditBooking = (booking) => {\r\n    console.log('Редактировать:', booking);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleDeleteBooking = (id) => {\r\n    if (window.confirm('Вы уверены, что хотите удалить эту бронь?')) {\r\n      setSelectedBooking(null);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleAddBooking = (newBooking) => {\r\n    // Пока оставим мок — на следующем этапе заменим на мутацию\r\n    newBooking.reservation_id = newBooking.reservation_id || Date.now();\r\n    // mockReservations.push(newBooking); // ❌ Удалим позже\r\n    setFilters(prev => ({ ...prev }));\r\n    setIsAddModalOpen(false);\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return date.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  // ✅ Ждём загрузки и бань, и броней\r\n  if (isLoadingBaths || isLoadingReservations) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-16\">\r\n        <div className=\"text-gray-500\">Загрузка данных...</div>\r\n      </div>\r\n    );\r\n  }\r\n  if (isError && error) {\r\n  return (\r\n    <div className=\"p-6 bg-red-50 border border-red-200 rounded-xl\">\r\n      <h3 className=\"text-lg font-medium text-red-800\">Ошибка загрузки</h3>\r\n      <p className=\"text-red-700 mt-2\">\r\n        {error.status === 401 \r\n          ? 'Не авторизован. Пожалуйста, войдите снова.' \r\n          : error.message || 'Произошла ошибка'}\r\n      </p>\r\n      {error.status === 401 && (\r\n        <button\r\n          onClick={() => {\r\n            localStorage.removeItem('access_token');\r\n            window.location.href = '/admin/login';\r\n          }}\r\n          className=\"mt-4 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n        >\r\n          Перейти к логину\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n        Записи на {new Date(filters.date).toLocaleDateString('ru-RU', {\r\n          day: 'numeric',\r\n          month: 'long',\r\n          year: 'numeric',\r\n        })}\r\n      </h2>\r\n\r\n      <ReservationsFilters\r\n        onApply={handleApply}\r\n        onAddBooking={() => setIsAddModalOpen(true)}\r\n      />\r\n\r\n      <div className=\"overflow-x-auto pb-4 -mx-4 px-4\">\r\n        <div className=\"inline-flex space-x-6\">\r\n          {/* Колонка времени */}\r\n          <div className=\"flex-shrink-0 w-32 bg-gray-50 p-4 border-r border-gray-200\">\r\n            <div className=\"text-sm font-medium text-gray-700 mb-2\">ВРЕМЯ</div>\r\n            {timeSlots.map((slot, idx) => (\r\n              <div key={idx} className=\"text-sm text-gray-600 py-2\">\r\n                {formatTime(slot.start)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Колонки с банями */}\r\n          {bathsToDisplay.map((bath, idx) => {\r\n            const hasBookings = bath.bookings.length > 0;\r\n\r\n            return (\r\n              <div key={bath.bath_id} className=\"flex-shrink-0 w-96\">\r\n                <div className=\"bg-white rounded-xl shadow-md border border-gray-200 overflow-hidden\">\r\n                  <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-800\">{bath.bathName}</h3>\r\n                  </div>\r\n\r\n                  {hasBookings ? (\r\n                    <div className=\"overflow-x-auto\">\r\n                      <table className=\"w-full table-fixed border-separate border-spacing-0\">\r\n                        <thead className=\"bg-gray-50\">\r\n                          <tr>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                              Статус\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {timeSlots.map((slot, idx) => {\r\n                            const normalizedBookings = bath.bookings.map(booking => ({\r\n                              ...booking,\r\n                              start: new Date(booking.start_datetime),\r\n                              end: new Date(booking.end_datetime),\r\n                            }));\r\n\r\n                            const overlapping = normalizedBookings.find((res) =>\r\n                              res.start < slot.end && res.end > slot.start\r\n                            );\r\n\r\n                            return (\r\n                              <tr key={idx} className=\"border-b border-gray-100 hover:bg-gray-25 transition-colors\">\r\n                                <td className=\"px-6 py-0 h-14 relative bg-gray-50\">\r\n                                  {overlapping ? (\r\n                                    <div\r\n                                      className=\"absolute inset-y-0 left-0 right-0 bg-red-50 border border-red-200 text-red-800 text-sm font-medium rounded-lg px-3 flex items-center justify-center cursor-pointer hover:shadow transition-all duration-200 group\"\r\n                                      style={{\r\n                                        top: `${((overlapping.start - slot.start) / (1000 * 60)) / 30 * 100}%`,\r\n                                        height: `${((overlapping.end - overlapping.start) / (1000 * 60)) / 30 * 100}%`,\r\n                                      }}\r\n                                      title={`${overlapping.client_name} • ${formatTime(overlapping.start)} – ${formatTime(overlapping.end)}`}\r\n                                      onClick={() => handleViewBooking(overlapping)}\r\n                                    >\r\n                                      <div className=\"w-1 bg-red-400 rounded-full absolute left-0 top-1 bottom-1 group-hover:w-2 transition-all duration-200\"></div>\r\n                                      <span className=\"truncate max-w-full text-center leading-tight font-medium\">\r\n                                        {overlapping.client_name}\r\n                                      </span>\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div className=\"absolute inset-0 flex items-center justify-center text-green-600 text-sm font-medium bg-green-50 rounded-lg border border-green-200\">\r\n                                      Свободно\r\n                                    </div>\r\n                                  )}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"h-full flex items-center justify-center p-8\">\r\n                      <div className=\"text-center text-gray-500 py-10 bg-gray-50 rounded-lg w-full\">\r\n                        <svg className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                        </svg>\r\n                        <p className=\"text-lg font-medium\">Нет записей</p>\r\n                        <p className=\"text-sm mt-1\">На эту дату для бани \"{bath.bathName}\" бронирований нет.</p>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <BookingDetailsModal\r\n        booking={selectedBooking}\r\n        onClose={handleCloseModal}\r\n        onEdit={handleEditBooking}\r\n        onDelete={handleDeleteBooking}\r\n      />\r\n\r\n      <AddBookingModal\r\n        isOpen={isAddModalOpen}\r\n        onClose={() => setIsAddModalOpen(false)}\r\n        onAdd={handleAddBooking}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminReservations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}