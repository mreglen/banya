{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khram\\\\Desktop\\\\ilya\\\\banya\\\\frontend\\\\my-banya\\\\src\\\\pages\\\\Admin\\\\Reservations\\\\AdminReservations.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useMemo, useEffect } from 'react';\nimport ReservationsFilters from '../Reservations/ReservationsFilters';\nimport BookingDetailsModal from '../Reservations/BookingDetailsModal';\nimport AddBookingModal from '../Reservations/AddBookingModal';\nimport { useGetBathsQuery, useGetReservationsByDateQuery } from '../../../redux/slices/apiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminReservations() {\n  _s();\n  const today = new Date().toISOString().split('T')[0];\n  const [filters, setFilters] = useState({\n    date: today\n  });\n  const [selectedBooking, setSelectedBooking] = useState(null);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n\n  // Получаем ВСЕ бани\n  const {\n    data: baths = [],\n    isLoading: isLoadingBaths\n  } = useGetBathsQuery();\n  // Получаем брони на выбранную дату\n  const {\n    data: reservations = [],\n    isLoading: isLoadingReservations\n  } = useGetReservationsByDateQuery({\n    date: filters.date || today\n  });\n\n  // Простая генерация слотов 9:00 - 23:30\n  const timeSlots = useMemo(() => {\n    const slots = [];\n    for (let hour = 9; hour < 24; hour++) {\n      for (let minute of [0, 30]) {\n        const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        const dateTime = new Date(`${filters.date}T${timeStr}:00`);\n        slots.push({\n          time: timeStr,\n          start: dateTime,\n          end: new Date(dateTime.getTime() + 30 * 60000)\n        });\n      }\n    }\n    return slots;\n  }, [filters.date]);\n\n  // Формируем список бань с бронями — просто и надёжно\n  const bathsToDisplay = useMemo(() => {\n    if (!Array.isArray(baths) || baths.length === 0) {\n      return [];\n    }\n    return baths.map(bath => {\n      // Определяем ID бани — пробуем bath_id, потом id\n      const bathId = bath.bath_id !== undefined ? bath.bath_id : bath.id;\n\n      // Если и того, и другого нет — пропускаем\n      if (bathId === undefined) {\n        console.warn('⚠️ У бани отсутствует и bath_id, и id:', bath);\n        return null;\n      }\n\n      // Находим все брони для этой бани на выбранную дату\n      const bookings = (Array.isArray(reservations) ? reservations : []).filter(res => {\n        if (!res || !res.bath_id || !res.start_datetime) return false;\n\n        // Извлекаем дату из строки брони (игнорируем часовой пояс)\n        const bookingDate = res.start_datetime.split('T')[0];\n        return res.bath_id === bathId && bookingDate === filters.date;\n      });\n      return {\n        bath_id: bathId,\n        bathName: bath.name || 'Без названия',\n        bookings: bookings,\n        hasBookings: bookings.length > 0\n      };\n    }).filter(Boolean); // Убираем null\n  }, [baths, reservations, filters.date]);\n\n  // Формат времени\n  const formatTime = date => {\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Обработчики\n  const handleApply = newFilters => {\n    setFilters(newFilters);\n  };\n  const handleViewBooking = booking => {\n    setSelectedBooking(booking);\n  };\n  const handleCloseModal = () => {\n    setSelectedBooking(null);\n  };\n  const handleAddBooking = () => {\n    setIsAddModalOpen(true);\n  };\n\n  // Загрузка\n  if (isLoadingBaths || isLoadingReservations) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-16\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-800 mb-6\",\n      children: [\"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0438 \\u043D\\u0430 \", new Date(filters.date).toLocaleDateString('ru-RU', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReservationsFilters, {\n      onApply: handleApply,\n      onAddBooking: handleAddBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto pb-4 -mx-4 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-flex space-x-6 min-h-[600px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-32 bg-gray-50 p-4 border-r border-gray-200 sticky top-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-medium text-gray-700 mb-2\",\n            children: \"\\u0412\\u0420\\u0415\\u041C\\u042F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), timeSlots.map((slot, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 py-2 h-14 flex items-center\",\n            children: formatTime(slot.start)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), bathsToDisplay.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 p-8\",\n          children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u0431\\u0430\\u043D\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this) : bathsToDisplay.map(bath => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-96\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl shadow-md border border-gray-200 overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 border-b border-gray-200 bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-800\",\n                children: bath.bathName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full table-fixed border-separate border-spacing-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: timeSlots.map((slot, idx) => {\n                    // Находим бронь, которая начинается в этом слоте\n                    const bookingStartsHere = bath.bookings.find(booking => {\n                      const start = new Date(booking.start_datetime);\n                      const end = new Date(booking.end_datetime);\n\n                      // Конвертируем в UTC\n                      const startUTC = new Date(start.toISOString().replace('+05:00', 'Z'));\n                      const endUTC = new Date(end.toISOString().replace('+05:00', 'Z'));\n                      return startUTC >= slot.start && startUTC < slot.end;\n                    });\n                    const anyBookingOverlaps = bath.bookings.some(booking => {\n                      const start = new Date(booking.start_datetime);\n                      const end = new Date(booking.end_datetime);\n                      const startUTC = new Date(start.toISOString().replace('+05:00', 'Z'));\n                      const endUTC = new Date(end.toISOString().replace('+05:00', 'Z'));\n                      return startUTC < slot.end && endUTC > slot.start;\n                    });\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"hover:bg-gray-25 transition-colors\",\n                      children: /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-0 relative bg-gray-50\",\n                        style: {\n                          height: '56px',\n                          overflow: 'visible'\n                        },\n                        children: bookingStartsHere ?\n                        /*#__PURE__*/\n                        // Рисуем бронь ТОЛЬКО в ячейке, где она начинается\n                        _jsxDEV(\"div\", {\n                          className: \"absolute inset-x-0 bg-red-50 border-4 border-red-600 text-red-800 text-sm font-medium rounded-lg px-3 flex items-center justify-center cursor-pointer hover:shadow transition-all duration-200 group\",\n                          style: {\n                            top: 0,\n                            height: `${(new Date(bookingStartsHere.end_datetime) - new Date(bookingStartsHere.start_datetime)) / (30 * 60000) * 100}%`,\n                            zIndex: 10,\n                            overflow: 'visible'\n                          },\n                          title: `${bookingStartsHere.client_name} • ${formatTime(new Date(bookingStartsHere.start_datetime))} – ${formatTime(new Date(bookingStartsHere.end_datetime))}`,\n                          onClick: () => handleViewBooking(bookingStartsHere),\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"w-1 bg-red-400 rounded-full absolute left-0 top-1 bottom-1 group-hover:w-2 transition-all duration-200\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 194,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"truncate max-w-full text-center leading-tight font-medium\",\n                            children: bookingStartsHere.client_name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 35\n                        }, this) : !anyBookingOverlaps ?\n                        /*#__PURE__*/\n                        // Рисуем \"Свободно\" только если никакая бронь не перекрывает этот слот\n                        _jsxDEV(\"div\", {\n                          className: \"absolute inset-0 flex items-center justify-center text-green-600 text-sm font-medium bg-green-50 rounded-lg border border-green-200\",\n                          children: \"\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 35\n                        }, this) : null\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 31\n                      }, this)\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, bath.bath_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookingDetailsModal, {\n      booking: selectedBooking,\n      onClose: handleCloseModal,\n      onEdit: () => {},\n      onDelete: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddBookingModal, {\n      isOpen: isAddModalOpen,\n      onClose: () => setIsAddModalOpen(false),\n      onAdd: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminReservations, \"6wPxOmYzGTOWiGIZXKfjIUS38XA=\", false, function () {\n  return [useGetBathsQuery, useGetReservationsByDateQuery];\n});\n_c = AdminReservations;\nexport default AdminReservations;\nvar _c;\n$RefreshReg$(_c, \"AdminReservations\");","map":{"version":3,"names":["useState","useMemo","useEffect","ReservationsFilters","BookingDetailsModal","AddBookingModal","useGetBathsQuery","useGetReservationsByDateQuery","jsxDEV","_jsxDEV","AdminReservations","_s","today","Date","toISOString","split","filters","setFilters","date","selectedBooking","setSelectedBooking","isAddModalOpen","setIsAddModalOpen","data","baths","isLoading","isLoadingBaths","reservations","isLoadingReservations","timeSlots","slots","hour","minute","timeStr","toString","padStart","dateTime","push","time","start","end","getTime","bathsToDisplay","Array","isArray","length","map","bath","bathId","bath_id","undefined","id","console","warn","bookings","filter","res","start_datetime","bookingDate","bathName","name","hasBookings","Boolean","formatTime","toLocaleTimeString","handleApply","newFilters","handleViewBooking","booking","handleCloseModal","handleAddBooking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","day","month","year","onApply","onAddBooking","slot","idx","bookingStartsHere","find","end_datetime","startUTC","replace","endUTC","anyBookingOverlaps","some","style","height","overflow","top","zIndex","title","client_name","onClick","onClose","onEdit","onDelete","isOpen","onAdd","_c","$RefreshReg$"],"sources":["C:/Users/khram/Desktop/ilya/banya/frontend/my-banya/src/pages/Admin/Reservations/AdminReservations.jsx"],"sourcesContent":["import { useState, useMemo, useEffect } from 'react';\r\nimport ReservationsFilters from '../Reservations/ReservationsFilters';\r\nimport BookingDetailsModal from '../Reservations/BookingDetailsModal';\r\nimport AddBookingModal from '../Reservations/AddBookingModal';\r\nimport { useGetBathsQuery, useGetReservationsByDateQuery } from '../../../redux/slices/apiSlice';\r\n\r\nfunction AdminReservations() {\r\n  const today = new Date().toISOString().split('T')[0];\r\n  const [filters, setFilters] = useState({ date: today });\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n\r\n  // Получаем ВСЕ бани\r\n  const { data: baths = [], isLoading: isLoadingBaths } = useGetBathsQuery();\r\n  // Получаем брони на выбранную дату\r\n  const { data: reservations = [], isLoading: isLoadingReservations } = useGetReservationsByDateQuery({\r\n    date: filters.date || today,\r\n  });\r\n\r\n  // Простая генерация слотов 9:00 - 23:30\r\n  const timeSlots = useMemo(() => {\r\n    const slots = [];\r\n    for (let hour = 9; hour < 24; hour++) {\r\n      for (let minute of [0, 30]) {\r\n        const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n        const dateTime = new Date(`${filters.date}T${timeStr}:00`);\r\n        slots.push({\r\n          time: timeStr,\r\n          start: dateTime,\r\n          end: new Date(dateTime.getTime() + 30 * 60000),\r\n        });\r\n      }\r\n    }\r\n    return slots;\r\n  }, [filters.date]);\r\n\r\n  // Формируем список бань с бронями — просто и надёжно\r\n  const bathsToDisplay = useMemo(() => {\r\n    if (!Array.isArray(baths) || baths.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    return baths.map(bath => {\r\n      // Определяем ID бани — пробуем bath_id, потом id\r\n      const bathId = bath.bath_id !== undefined ? bath.bath_id : bath.id;\r\n\r\n      // Если и того, и другого нет — пропускаем\r\n      if (bathId === undefined) {\r\n        console.warn('⚠️ У бани отсутствует и bath_id, и id:', bath);\r\n        return null;\r\n      }\r\n\r\n      // Находим все брони для этой бани на выбранную дату\r\n      const bookings = (Array.isArray(reservations) ? reservations : []).filter(res => {\r\n        if (!res || !res.bath_id || !res.start_datetime) return false;\r\n\r\n        // Извлекаем дату из строки брони (игнорируем часовой пояс)\r\n        const bookingDate = res.start_datetime.split('T')[0];\r\n        return res.bath_id === bathId && bookingDate === filters.date;\r\n      });\r\n\r\n      return {\r\n        bath_id: bathId,\r\n        bathName: bath.name || 'Без названия',\r\n        bookings: bookings,\r\n        hasBookings: bookings.length > 0,\r\n      };\r\n    }).filter(Boolean); // Убираем null\r\n  }, [baths, reservations, filters.date]);\r\n\r\n  // Формат времени\r\n  const formatTime = (date) => {\r\n    return date.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  // Обработчики\r\n  const handleApply = (newFilters) => {\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  const handleViewBooking = (booking) => {\r\n    setSelectedBooking(booking);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleAddBooking = () => {\r\n    setIsAddModalOpen(true);\r\n  };\r\n\r\n  // Загрузка\r\n  if (isLoadingBaths || isLoadingReservations) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-16\">\r\n        <div className=\"text-gray-500\">Загрузка...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n        Записи на {new Date(filters.date).toLocaleDateString('ru-RU', {\r\n          day: 'numeric',\r\n          month: 'long',\r\n          year: 'numeric',\r\n        })}\r\n      </h2>\r\n\r\n      <ReservationsFilters\r\n        onApply={handleApply}\r\n        onAddBooking={handleAddBooking}\r\n      />\r\n\r\n      <div className=\"overflow-x-auto pb-4 -mx-4 px-4\">\r\n        <div className=\"inline-flex space-x-6 min-h-[600px]\">\r\n          {/* Колонка времени */}\r\n          <div className=\"flex-shrink-0 w-32 bg-gray-50 p-4 border-r border-gray-200 sticky top-0\">\r\n            <div className=\"text-sm font-medium text-gray-700 mb-2\">ВРЕМЯ</div>\r\n            {/* Пустая строка сверху — чтобы сдвинуть время вниз */}\r\n            <div className=\"h-14\"></div>\r\n            {timeSlots.map((slot, idx) => (\r\n              <div key={idx} className=\"text-sm text-gray-600 py-2 h-14 flex items-center\">\r\n                {formatTime(slot.start)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Колонки с банями */}\r\n          {bathsToDisplay.length === 0 ? (\r\n            <div className=\"text-gray-500 p-8\">Нет доступных бань</div>\r\n          ) : (\r\n            bathsToDisplay.map((bath) => (\r\n              <div key={bath.bath_id} className=\"flex-shrink-0 w-96\">\r\n                <div className=\"bg-white rounded-xl shadow-md border border-gray-200 overflow-hidden\">\r\n                  <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-800\">{bath.bathName}</h3>\r\n                  </div>\r\n\r\n                  {/* Таблица временных слотов */}\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full table-fixed border-separate border-spacing-0\">\r\n                      <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Статус\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {/* Пустая строка сверху — чтобы сдвинуть статусы вниз */}\r\n         \r\n                        {timeSlots.map((slot, idx) => {\r\n                          // Находим бронь, которая начинается в этом слоте\r\n                          const bookingStartsHere = bath.bookings.find(booking => {\r\n  const start = new Date(booking.start_datetime);\r\n  const end = new Date(booking.end_datetime);\r\n\r\n  // Конвертируем в UTC\r\n  const startUTC = new Date(start.toISOString().replace('+05:00', 'Z'));\r\n  const endUTC = new Date(end.toISOString().replace('+05:00', 'Z'));\r\n\r\n  return startUTC >= slot.start && startUTC < slot.end;\r\n});\r\n\r\nconst anyBookingOverlaps = bath.bookings.some(booking => {\r\n  const start = new Date(booking.start_datetime);\r\n  const end = new Date(booking.end_datetime);\r\n\r\n  const startUTC = new Date(start.toISOString().replace('+05:00', 'Z'));\r\n  const endUTC = new Date(end.toISOString().replace('+05:00', 'Z'));\r\n\r\n  return startUTC < slot.end && endUTC > slot.start;\r\n});\r\n\r\n                          return (\r\n                            <tr key={idx} className=\"hover:bg-gray-25 transition-colors\">\r\n                              <td className=\"px-6 py-0 relative bg-gray-50\" style={{ height: '56px', overflow: 'visible' }}>\r\n                                {bookingStartsHere ? (\r\n                                  // Рисуем бронь ТОЛЬКО в ячейке, где она начинается\r\n                                  <div\r\n                                    className=\"absolute inset-x-0 bg-red-50 border-4 border-red-600 text-red-800 text-sm font-medium rounded-lg px-3 flex items-center justify-center cursor-pointer hover:shadow transition-all duration-200 group\"\r\n                                    style={{\r\n                                      top: 0,\r\n                                      height: `${((new Date(bookingStartsHere.end_datetime) - new Date(bookingStartsHere.start_datetime)) / (30 * 60000)) * 100}%`,\r\n                                      zIndex: 10,\r\n                                      overflow: 'visible',\r\n                                    }}\r\n                                    title={`${bookingStartsHere.client_name} • ${formatTime(new Date(bookingStartsHere.start_datetime))} – ${formatTime(new Date(bookingStartsHere.end_datetime))}`}\r\n                                    onClick={() => handleViewBooking(bookingStartsHere)}\r\n                                  >\r\n                                    <div className=\"w-1 bg-red-400 rounded-full absolute left-0 top-1 bottom-1 group-hover:w-2 transition-all duration-200\"></div>\r\n                                    <span className=\"truncate max-w-full text-center leading-tight font-medium\">\r\n                                      {bookingStartsHere.client_name}\r\n                                    </span>\r\n                                  </div>\r\n                                ) : !anyBookingOverlaps ? (\r\n                                  // Рисуем \"Свободно\" только если никакая бронь не перекрывает этот слот\r\n                                  <div className=\"absolute inset-0 flex items-center justify-center text-green-600 text-sm font-medium bg-green-50 rounded-lg border border-green-200\">\r\n                                    Свободно\r\n                                  </div>\r\n                                ) : null}\r\n                                {/* Если бронь перекрывает слот, но не начинается в нём — ничего не рисуем */}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <BookingDetailsModal\r\n        booking={selectedBooking}\r\n        onClose={handleCloseModal}\r\n        onEdit={() => { }}\r\n        onDelete={() => { }}\r\n      />\r\n\r\n      <AddBookingModal\r\n        isOpen={isAddModalOpen}\r\n        onClose={() => setIsAddModalOpen(false)}\r\n        onAdd={() => { }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminReservations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}