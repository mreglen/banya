{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ilya\\\\Desktop\\\\banya\\\\frontend\\\\my-banya\\\\src\\\\pages\\\\Admin\\\\AdminReservations\\\\AdminReservations.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport ReservationsFilters from '../Reservations/ReservationsFilters';\nimport ReservationsTable from './ReservationsTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockReservations = [{\n  reservation_id: 1,\n  bath_id: 1,\n  start_datetime: \"2025-04-05T10:00:00\",\n  end_datetime: \"2025-04-05T12:00:00\",\n  client_name: \"Иван Иванов\",\n  client_phone: \"+7 (999) 123-45-67\",\n  client_email: \"ivan@example.com\",\n  notes: \"Хочу веники\",\n  total_cost: 6000,\n  services: [{\n    service_id: 1,\n    name: \"Веники\",\n    cost: 500,\n    quantity: 2\n  }]\n}, {\n  reservation_id: 2,\n  bath_id: 1,\n  start_datetime: \"2025-04-05T14:00:00\",\n  end_datetime: \"2025-04-05T15:30:00\",\n  client_name: \"Мария Петрова\",\n  client_phone: \"+7 (987) 654-32-10\",\n  client_email: \"maria@example.com\",\n  notes: \"\",\n  total_cost: 4500,\n  services: []\n}];\nfunction AdminReservations() {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [filters, setFilters] = useState(null);\n  const handleApply = filters => {\n    console.log('Применены фильтры:', filters);\n    if (filters.bathId === '1' && filters.date === '2025-04-05') {\n      setReservations(mockReservations);\n    } else {\n      setReservations([]);\n    }\n    setFilters(filters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-800 mb-6\",\n      children: \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReservationsFilters, {\n      onApply: handleApply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReservationsTable, {\n      reservations: reservations,\n      date: filters === null || filters === void 0 ? void 0 : filters.date,\n      bathId: filters === null || filters === void 0 ? void 0 : filters.bathId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminReservations, \"AvbqinnJuZNeLT+tK6i/hiir5VQ=\");\n_c = AdminReservations;\nexport default AdminReservations;\nvar _c;\n$RefreshReg$(_c, \"AdminReservations\");","map":{"version":3,"names":["useState","ReservationsFilters","ReservationsTable","jsxDEV","_jsxDEV","mockReservations","reservation_id","bath_id","start_datetime","end_datetime","client_name","client_phone","client_email","notes","total_cost","services","service_id","name","cost","quantity","AdminReservations","_s","reservations","setReservations","filters","setFilters","handleApply","console","log","bathId","date","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onApply","_c","$RefreshReg$"],"sources":["C:/Users/Ilya/Desktop/banya/frontend/my-banya/src/pages/Admin/AdminReservations/AdminReservations.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport ReservationsFilters from '../Reservations/ReservationsFilters';\r\nimport ReservationsTable from './ReservationsTable';\r\n\r\n\r\nconst mockReservations = [\r\n  {\r\n    reservation_id: 1,\r\n    bath_id: 1,\r\n    start_datetime: \"2025-04-05T10:00:00\",\r\n    end_datetime: \"2025-04-05T12:00:00\",\r\n    client_name: \"Иван Иванов\",\r\n    client_phone: \"+7 (999) 123-45-67\",\r\n    client_email: \"ivan@example.com\",\r\n    notes: \"Хочу веники\",\r\n    total_cost: 6000,\r\n    services: [\r\n      { service_id: 1, name: \"Веники\", cost: 500, quantity: 2 }\r\n    ]\r\n  },\r\n  {\r\n    reservation_id: 2,\r\n    bath_id: 1,\r\n    start_datetime: \"2025-04-05T14:00:00\",\r\n    end_datetime: \"2025-04-05T15:30:00\",\r\n    client_name: \"Мария Петрова\",\r\n    client_phone: \"+7 (987) 654-32-10\",\r\n    client_email: \"maria@example.com\",\r\n    notes: \"\",\r\n    total_cost: 4500,\r\n    services: []\r\n  }\r\n];\r\n\r\nfunction AdminReservations() {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [filters, setFilters] = useState(null);\r\n\r\n  const handleApply = (filters) => {\r\n    console.log('Применены фильтры:', filters);\r\n  \r\n    if (filters.bathId === '1' && filters.date === '2025-04-05') {\r\n      setReservations(mockReservations);\r\n    } else {\r\n      setReservations([]);\r\n    }\r\n    setFilters(filters);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-semibold text-gray-800 mb-6\">Записи</h2>\r\n      \r\n      <ReservationsFilters onApply={handleApply} />\r\n      \r\n      <ReservationsTable \r\n        reservations={reservations} \r\n        date={filters?.date} \r\n        bathId={filters?.bathId} \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminReservations;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,MAAMC,gBAAgB,GAAG,CACvB;EACEC,cAAc,EAAE,CAAC;EACjBC,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,qBAAqB;EACrCC,YAAY,EAAE,qBAAqB;EACnCC,WAAW,EAAE,aAAa;EAC1BC,YAAY,EAAE,oBAAoB;EAClCC,YAAY,EAAE,kBAAkB;EAChCC,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,CACR;IAAEC,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAE,CAAC;AAE7D,CAAC,EACD;EACEb,cAAc,EAAE,CAAC;EACjBC,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,qBAAqB;EACrCC,YAAY,EAAE,qBAAqB;EACnCC,WAAW,EAAE,eAAe;EAC5BC,YAAY,EAAE,oBAAoB;EAClCC,YAAY,EAAE,mBAAmB;EACjCC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,SAASK,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM0B,WAAW,GAAIF,OAAO,IAAK;IAC/BG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,OAAO,CAAC;IAE1C,IAAIA,OAAO,CAACK,MAAM,KAAK,GAAG,IAAIL,OAAO,CAACM,IAAI,KAAK,YAAY,EAAE;MAC3DP,eAAe,CAAClB,gBAAgB,CAAC;IACnC,CAAC,MAAM;MACLkB,eAAe,CAAC,EAAE,CAAC;IACrB;IACAE,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;EAED,oBACEpB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAI4B,SAAS,EAAC,2CAA2C;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErEhC,OAAA,CAACH,mBAAmB;MAACoC,OAAO,EAAEX;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE7ChC,OAAA,CAACF,iBAAiB;MAChBoB,YAAY,EAAEA,YAAa;MAC3BQ,IAAI,EAAEN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,IAAK;MACpBD,MAAM,EAAEL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEK;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACf,EAAA,CA5BQD,iBAAiB;AAAAkB,EAAA,GAAjBlB,iBAAiB;AA8B1B,eAAeA,iBAAiB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}