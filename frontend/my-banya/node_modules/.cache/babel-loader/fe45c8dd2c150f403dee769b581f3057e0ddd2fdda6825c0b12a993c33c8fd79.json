{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khram\\\\Desktop\\\\ilya\\\\banya\\\\frontend\\\\my-banya\\\\src\\\\pages\\\\Admin\\\\Reservations\\\\AdminReservations.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useMemo } from 'react';\nimport ReservationsFilters from '../Reservations/ReservationsFilters';\nimport BookingDetailsModal from '../Reservations/BookingDetailsModal';\nimport AddBookingModal from '../Reservations/AddBookingModal';\nimport { useGetBathsQuery, useGetReservationsByDateQuery } from '../../../redux/slices/apiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminReservations() {\n  _s();\n  const today = new Date().toISOString().split('T')[0];\n  const [filters, setFilters] = useState({\n    date: today\n  });\n  const [selectedBooking, setSelectedBooking] = useState(null);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [editingBooking, setEditingBooking] = useState(null);\n  // Получаем ВСЕ бани\n  const {\n    data: baths = [],\n    isLoading: isLoadingBaths\n  } = useGetBathsQuery();\n  // Получаем брони на выбранную дату\n  const {\n    data: reservations = [],\n    isLoading: isLoadingReservations\n  } = useGetReservationsByDateQuery({\n    date: filters.date || today\n  });\n\n  // Простая генерация слотов 9:00 - 23:30\n  const timeSlots = useMemo(() => {\n    const slots = [];\n    for (let hour = 9; hour < 24; hour++) {\n      for (let minute of [0, 30]) {\n        const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        const dateTime = new Date(`${filters.date}T${timeStr}:00`);\n        slots.push({\n          time: timeStr,\n          start: dateTime,\n          end: new Date(dateTime.getTime() + 30 * 60000)\n        });\n      }\n    }\n    return slots;\n  }, [filters.date]);\n\n  // Формируем список бань с бронями\n  const bathsToDisplay = useMemo(() => {\n    if (!Array.isArray(baths) || baths.length === 0) {\n      return [];\n    }\n    return baths.map(bath => {\n      const bathId = bath.bath_id !== undefined ? bath.bath_id : bath.id;\n      if (bathId === undefined) {\n        console.warn('⚠️ У бани отсутствует и bath_id, и id:', bath);\n        return null;\n      }\n      const bookings = (Array.isArray(reservations) ? reservations : []).filter(res => {\n        if (!res || !res.bath_id || !res.start_datetime) return false;\n        const bookingDate = res.start_datetime.split('T')[0];\n        return res.bath_id === bathId && bookingDate === filters.date;\n      });\n      return {\n        bath_id: bathId,\n        bathName: bath.name || 'Без названия',\n        bookings: bookings,\n        hasBookings: bookings.length > 0\n      };\n    }).filter(Boolean);\n  }, [baths, reservations, filters.date]);\n\n  // Формат времени\n  const formatTime = date => {\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Формат интервала времени: \"09:00 – 09:30\"\n  const formatTimeRange = (start, end) => {\n    const options = {\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    const startStr = start.toLocaleTimeString('ru-RU', options);\n    const endStr = end.toLocaleTimeString('ru-RU', options);\n    return `${startStr} – ${endStr}`;\n  };\n\n  // Обработчики\n\n  const handleApply = newFilters => {\n    setFilters(newFilters);\n  };\n  const handleViewBooking = booking => {\n    setSelectedBooking(booking);\n  };\n  const handleCloseModal = () => {\n    setSelectedBooking(null);\n  };\n  const handleAddBooking = () => {\n    setIsAddModalOpen(true); // Открываем модалку для добавления\n    setEditingBooking(null); // Убеждаемся, что нет данных редактирования\n  };\n  const handleEditBooking = booking => {\n    setEditingBooking(booking);\n    setSelectedBooking(null); // закрываем просмотр\n  };\n  const handleCloseAllModals = () => {\n    setSelectedBooking(null);\n    setEditingBooking(null);\n    setIsAddModalOpen(false); // ← добавь это\n  };\n  // Загрузка\n  if (isLoadingBaths || isLoadingReservations) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-16\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-800 mb-6\",\n      children: [\"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0438 \\u043D\\u0430 \", new Date(filters.date).toLocaleDateString('ru-RU', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReservationsFilters, {\n      onApply: handleApply,\n      onAddBooking: handleAddBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto pb-4 -mx-4 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-flex space-x-6 min-h-[600px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-32 bg-gray-50 p-4 border-r border-gray-200 sticky top-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-medium text-gray-700 mb-2\",\n            children: \"\\u0412\\u0420\\u0415\\u041C\\u042F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), timeSlots.map((slot, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 h-14 flex items-center justify-center leading-none\",\n            children: formatTimeRange(slot.start, slot.end)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), bathsToDisplay.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 p-8\",\n          children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u0431\\u0430\\u043D\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this) : bathsToDisplay.map(bath => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-96\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl shadow-md border border-gray-200 overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 border-b border-gray-200 bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-800\",\n                children: bath.bathName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full table-fixed border-separate border-spacing-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: timeSlots.map((slot, idx) => {\n                    const overlappingBookings = bath.bookings.filter(booking => {\n                      const start = new Date(booking.start_datetime);\n                      const end = new Date(booking.end_datetime);\n                      const startUTC = new Date(start.toISOString().replace('+05:00', 'Z'));\n                      const endUTC = new Date(end.toISOString().replace('+05:00', 'Z'));\n                      return startUTC < slot.end && endUTC > slot.start;\n                    });\n                    const activeBooking = overlappingBookings[0];\n                    const bookingStartsHere = bath.bookings.find(booking => {\n                      const start = new Date(booking.start_datetime);\n                      const end = new Date(booking.end_datetime);\n                      const startUTC = new Date(start.toISOString().replace('+05:00', 'Z'));\n                      const endUTC = new Date(end.toISOString().replace('+05:00', 'Z'));\n                      return startUTC >= slot.start && startUTC < slot.end;\n                    });\n                    const durationMinutes = bookingStartsHere ? (new Date(bookingStartsHere.end_datetime) - new Date(bookingStartsHere.start_datetime)) / 60000 : 0;\n                    const heightPercent = durationMinutes / 30 * 100;\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"hover:bg-gray-25 transition-colors\",\n                      children: /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-0 relative bg-gray-50\",\n                        style: {\n                          height: '56px',\n                          overflow: 'visible'\n                        },\n                        children: overlappingBookings.length > 0 && activeBooking && bookingStartsHere ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"absolute inset-0 bg-red-50 border-2 border-red-400 text-red-800 text-sm font-medium rounded-lg px-2 py-1 cursor-pointer hover:shadow transition-all duration-200 group flex flex-col justify-center items-center text-center\",\n                          style: {\n                            zIndex: 10,\n                            overflow: 'hidden'\n                          },\n                          title: `${activeBooking.client_name} • ${formatTime(new Date(activeBooking.start_datetime))} – ${formatTime(new Date(activeBooking.end_datetime))}`,\n                          onClick: () => handleViewBooking(activeBooking),\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"w-1 bg-red-400 rounded-full absolute left-0 top-1 bottom-1 group-hover:w-2 transition-all duration-200\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 209,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"font-medium truncate w-full\",\n                            children: [\"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442: \", activeBooking.client_name || '—']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 211,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"truncate w-full\",\n                            children: [\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D: \", activeBooking.client_phone || '—']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 212,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"truncate w-full\",\n                            children: [\"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439: \", activeBooking.notes || '—']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 213,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"font-semibold w-full\",\n                            children: [\"\\u0418\\u0442\\u043E\\u0433\\u043E: \", activeBooking.total_cost, \" \\u20BD\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 214,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 200,\n                          columnNumber: 35\n                        }, this) : overlappingBookings.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"absolute inset-0 flex items-center justify-center text-green-600 text-sm font-medium bg-green-50 rounded-lg border border-green-200\",\n                          children: \"\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 35\n                        }, this) : null\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 31\n                      }, this)\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)\n        }, bath.bath_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookingDetailsModal, {\n      booking: selectedBooking,\n      onClose: handleCloseAllModals,\n      onEdit: handleEditBooking,\n      onDelete: () => {/* реализуйте позже */}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddBookingModal, {\n      isOpen: isAddModalOpen || editingBooking !== null,\n      onClose: handleCloseAllModals,\n      booking: editingBooking // если null — режим создания\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminReservations, \"Ch54Om3NND6BXVt+oWuTq1ZtWfI=\", false, function () {\n  return [useGetBathsQuery, useGetReservationsByDateQuery];\n});\n_c = AdminReservations;\nexport default AdminReservations;\nvar _c;\n$RefreshReg$(_c, \"AdminReservations\");","map":{"version":3,"names":["useState","useMemo","ReservationsFilters","BookingDetailsModal","AddBookingModal","useGetBathsQuery","useGetReservationsByDateQuery","jsxDEV","_jsxDEV","AdminReservations","_s","today","Date","toISOString","split","filters","setFilters","date","selectedBooking","setSelectedBooking","isAddModalOpen","setIsAddModalOpen","editingBooking","setEditingBooking","data","baths","isLoading","isLoadingBaths","reservations","isLoadingReservations","timeSlots","slots","hour","minute","timeStr","toString","padStart","dateTime","push","time","start","end","getTime","bathsToDisplay","Array","isArray","length","map","bath","bathId","bath_id","undefined","id","console","warn","bookings","filter","res","start_datetime","bookingDate","bathName","name","hasBookings","Boolean","formatTime","toLocaleTimeString","formatTimeRange","options","startStr","endStr","handleApply","newFilters","handleViewBooking","booking","handleCloseModal","handleAddBooking","handleEditBooking","handleCloseAllModals","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","day","month","year","onApply","onAddBooking","slot","idx","overlappingBookings","end_datetime","startUTC","replace","endUTC","activeBooking","bookingStartsHere","find","durationMinutes","heightPercent","style","height","overflow","zIndex","title","client_name","onClick","client_phone","notes","total_cost","onClose","onEdit","onDelete","isOpen","_c","$RefreshReg$"],"sources":["C:/Users/khram/Desktop/ilya/banya/frontend/my-banya/src/pages/Admin/Reservations/AdminReservations.jsx"],"sourcesContent":["import { useState, useMemo } from 'react';\r\nimport ReservationsFilters from '../Reservations/ReservationsFilters';\r\nimport BookingDetailsModal from '../Reservations/BookingDetailsModal';\r\nimport AddBookingModal from '../Reservations/AddBookingModal';\r\nimport { useGetBathsQuery, useGetReservationsByDateQuery } from '../../../redux/slices/apiSlice';\r\n\r\nfunction AdminReservations() {\r\n  const today = new Date().toISOString().split('T')[0];\r\n  const [filters, setFilters] = useState({ date: today });\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [editingBooking, setEditingBooking] = useState(null);\r\n  // Получаем ВСЕ бани\r\n  const { data: baths = [], isLoading: isLoadingBaths } = useGetBathsQuery();\r\n  // Получаем брони на выбранную дату\r\n  const { data: reservations = [], isLoading: isLoadingReservations } = useGetReservationsByDateQuery({\r\n    date: filters.date || today,\r\n  });\r\n\r\n  // Простая генерация слотов 9:00 - 23:30\r\n  const timeSlots = useMemo(() => {\r\n    const slots = [];\r\n    for (let hour = 9; hour < 24; hour++) {\r\n      for (let minute of [0, 30]) {\r\n        const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n        const dateTime = new Date(`${filters.date}T${timeStr}:00`);\r\n        slots.push({\r\n          time: timeStr,\r\n          start: dateTime,\r\n          end: new Date(dateTime.getTime() + 30 * 60000),\r\n        });\r\n      }\r\n    }\r\n    return slots;\r\n  }, [filters.date]);\r\n\r\n  // Формируем список бань с бронями\r\n  const bathsToDisplay = useMemo(() => {\r\n    if (!Array.isArray(baths) || baths.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    return baths.map(bath => {\r\n      const bathId = bath.bath_id !== undefined ? bath.bath_id : bath.id;\r\n      if (bathId === undefined) {\r\n        console.warn('⚠️ У бани отсутствует и bath_id, и id:', bath);\r\n        return null;\r\n      }\r\n\r\n      const bookings = (Array.isArray(reservations) ? reservations : []).filter(res => {\r\n        if (!res || !res.bath_id || !res.start_datetime) return false;\r\n        const bookingDate = res.start_datetime.split('T')[0];\r\n        return res.bath_id === bathId && bookingDate === filters.date;\r\n      });\r\n\r\n      return {\r\n        bath_id: bathId,\r\n        bathName: bath.name || 'Без названия',\r\n        bookings: bookings,\r\n        hasBookings: bookings.length > 0,\r\n      };\r\n    }).filter(Boolean);\r\n  }, [baths, reservations, filters.date]);\r\n\r\n  // Формат времени\r\n  const formatTime = (date) => {\r\n    return date.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  // Формат интервала времени: \"09:00 – 09:30\"\r\n  const formatTimeRange = (start, end) => {\r\n    const options = { hour: '2-digit', minute: '2-digit' };\r\n    const startStr = start.toLocaleTimeString('ru-RU', options);\r\n    const endStr = end.toLocaleTimeString('ru-RU', options);\r\n    return `${startStr} – ${endStr}`;\r\n  };\r\n\r\n  // Обработчики\r\n\r\n  const handleApply = (newFilters) => {\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  const handleViewBooking = (booking) => {\r\n    setSelectedBooking(booking);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleAddBooking = () => {\r\n    setIsAddModalOpen(true); // Открываем модалку для добавления\r\n    setEditingBooking(null); // Убеждаемся, что нет данных редактирования\r\n  };\r\n\r\n\r\n  const handleEditBooking = (booking) => {\r\n    setEditingBooking(booking);\r\n    setSelectedBooking(null); // закрываем просмотр\r\n  };\r\n\r\n  const handleCloseAllModals = () => {\r\n    setSelectedBooking(null);\r\n    setEditingBooking(null);\r\n    setIsAddModalOpen(false); // ← добавь это\r\n  };\r\n  // Загрузка\r\n  if (isLoadingBaths || isLoadingReservations) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-16\">\r\n        <div className=\"text-gray-500\">Загрузка...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n        Записи на {new Date(filters.date).toLocaleDateString('ru-RU', {\r\n          day: 'numeric',\r\n          month: 'long',\r\n          year: 'numeric',\r\n        })}\r\n      </h2>\r\n\r\n      <ReservationsFilters\r\n        onApply={handleApply}\r\n        onAddBooking={handleAddBooking}\r\n      />\r\n\r\n      <div className=\"overflow-x-auto pb-4 -mx-4 px-4\">\r\n        <div className=\"inline-flex space-x-6 min-h-[600px]\">\r\n          {/* Колонка времени */}\r\n          <div className=\"flex-shrink-0 w-32 bg-gray-50 p-4 border-r border-gray-200 sticky top-0\">\r\n            <div className=\"text-sm font-medium text-gray-700 mb-2\">ВРЕМЯ</div>\r\n            {/* Пустая строка для выравнивания с таблицами */}\r\n            <div className=\"h-14\"></div>\r\n            {timeSlots.map((slot, idx) => (\r\n              <div key={idx} className=\"text-sm text-gray-600 h-14 flex items-center justify-center leading-none\">\r\n                {formatTimeRange(slot.start, slot.end)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Колонки с банями */}\r\n          {bathsToDisplay.length === 0 ? (\r\n            <div className=\"text-gray-500 p-8\">Нет доступных бань</div>\r\n          ) : (\r\n            bathsToDisplay.map((bath) => (\r\n              <div key={bath.bath_id} className=\"flex-shrink-0 w-96\">\r\n                <div className=\"bg-white rounded-xl shadow-md border border-gray-200 overflow-hidden\">\r\n                  <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-800\">{bath.bathName}</h3>\r\n                  </div>\r\n\r\n                  {/* Таблица временных слотов */}\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full table-fixed border-separate border-spacing-0\">\r\n                      <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Статус\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {timeSlots.map((slot, idx) => {\r\n                          const overlappingBookings = bath.bookings.filter(booking => {\r\n                            const start = new Date(booking.start_datetime);\r\n                            const end = new Date(booking.end_datetime);\r\n\r\n                            const startUTC = new Date(start.toISOString().replace('+05:00', 'Z'));\r\n                            const endUTC = new Date(end.toISOString().replace('+05:00', 'Z'));\r\n\r\n                            return startUTC < slot.end && endUTC > slot.start;\r\n                          });\r\n\r\n                          const activeBooking = overlappingBookings[0];\r\n\r\n                          const bookingStartsHere = bath.bookings.find(booking => {\r\n                            const start = new Date(booking.start_datetime);\r\n                            const end = new Date(booking.end_datetime);\r\n\r\n                            const startUTC = new Date(start.toISOString().replace('+05:00', 'Z'));\r\n                            const endUTC = new Date(end.toISOString().replace('+05:00', 'Z'));\r\n\r\n                            return startUTC >= slot.start && startUTC < slot.end;\r\n                          });\r\n\r\n                          const durationMinutes = bookingStartsHere\r\n                            ? (new Date(bookingStartsHere.end_datetime) - new Date(bookingStartsHere.start_datetime)) / 60000\r\n                            : 0;\r\n                          const heightPercent = (durationMinutes / 30) * 100;\r\n\r\n                          return (\r\n                            <tr key={idx} className=\"hover:bg-gray-25 transition-colors\">\r\n                              <td className=\"px-6 py-0 relative bg-gray-50\" style={{ height: '56px', overflow: 'visible' }}>\r\n                                {overlappingBookings.length > 0 && activeBooking && bookingStartsHere ? (\r\n                                  <div\r\n                                    className=\"absolute inset-0 bg-red-50 border-2 border-red-400 text-red-800 text-sm font-medium rounded-lg px-2 py-1 cursor-pointer hover:shadow transition-all duration-200 group flex flex-col justify-center items-center text-center\"\r\n                                    style={{\r\n                                      zIndex: 10,\r\n                                      overflow: 'hidden', \r\n                                    }}\r\n                                    title={`${activeBooking.client_name} • ${formatTime(new Date(activeBooking.start_datetime))} – ${formatTime(new Date(activeBooking.end_datetime))}`}\r\n                                    onClick={() => handleViewBooking(activeBooking)}\r\n                                  >\r\n                                    <div className=\"w-1 bg-red-400 rounded-full absolute left-0 top-1 bottom-1 group-hover:w-2 transition-all duration-200\"></div>\r\n\r\n                                    <div className=\"font-medium truncate w-full\">Клиент: {activeBooking.client_name || '—'}</div>\r\n                                    <div className=\"truncate w-full\">Телефон: {activeBooking.client_phone || '—'}</div>\r\n                                    <div className=\"truncate w-full\">Комментарий: {activeBooking.notes || '—'}</div>\r\n                                    <div className=\"font-semibold w-full\">Итого: {activeBooking.total_cost} ₽</div>\r\n                                  </div>\r\n                                ) : overlappingBookings.length === 0 ? (\r\n                                  <div className=\"absolute inset-0 flex items-center justify-center text-green-600 text-sm font-medium bg-green-50 rounded-lg border border-green-200\">\r\n                                    Свободно\r\n                                  </div>\r\n                                ) : null}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* Модалка для ПРОСМОТРА брони */}\r\n      <BookingDetailsModal\r\n        booking={selectedBooking}\r\n        onClose={handleCloseAllModals}\r\n        onEdit={handleEditBooking}\r\n        onDelete={() => { /* реализуйте позже */ }}\r\n      />\r\n\r\n      {/* Модалка для ДОБАВЛЕНИЯ или РЕДАКТИРОВАНИЯ */}\r\n      <AddBookingModal\r\n        isOpen={isAddModalOpen || editingBooking !== null}\r\n        onClose={handleCloseAllModals}\r\n        booking={editingBooking} // если null — режим создания\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminReservations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}