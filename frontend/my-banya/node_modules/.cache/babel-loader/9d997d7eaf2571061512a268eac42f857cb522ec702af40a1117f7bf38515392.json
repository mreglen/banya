{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://127.0.0.1:8000/api'\n  }),\n  endpoints: builder => ({\n    getBaths: builder.query({\n      query: () => '/baths',\n      transformResponse: response => response,\n      providesTags: ['Baths']\n    })\n  })\n});\nexport const {\n  useGetBathsQuery\n} = apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","endpoints","builder","getBaths","query","transformResponse","response","providesTags","useGetBathsQuery"],"sources":["E:/ilya/banya/frontend/my-banya/src/redux/slices/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: 'api',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://127.0.0.1:8000/api' }), \r\n  endpoints: (builder) => ({\r\n    getBaths: builder.query({\r\n      query: () => '/baths',\r\n      transformResponse: (response) => response, \r\n      providesTags: ['Baths'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetBathsQuery } = apiSlice;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAA4B,CAAC,CAAC;EACnEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACtBA,KAAK,EAAEA,CAAA,KAAM,QAAQ;MACrBC,iBAAiB,EAAGC,QAAQ,IAAKA,QAAQ;MACzCC,YAAY,EAAE,CAAC,OAAO;IACxB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAiB,CAAC,GAAGX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}