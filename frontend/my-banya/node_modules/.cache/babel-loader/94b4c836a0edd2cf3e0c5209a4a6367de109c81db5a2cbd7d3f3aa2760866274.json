{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khram\\\\Desktop\\\\ilya\\\\banya\\\\frontend\\\\my-banya\\\\src\\\\pages\\\\Admin\\\\Reservations\\\\AdminReservations.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useMemo } from 'react';\nimport ReservationsFilters from '../Reservations/ReservationsFilters';\nimport BookingDetailsModal from '../Reservations/BookingDetailsModal';\nimport AddBookingModal from '../Reservations/AddBookingModal';\nimport { useGetBathsQuery, useGetReservationsByDateQuery } from '../../../redux/slices/apiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminReservations() {\n  _s();\n  const today = new Date().toISOString().split('T')[0];\n  const [filters, setFilters] = useState({\n    date: today\n  });\n  const [selectedBooking, setSelectedBooking] = useState(null);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n\n  // Получаем бани\n  const {\n    baths = [],\n    isLoading: isLoadingBaths,\n    error: bathsError,\n    isFetching: isFetchingBaths\n  } = useGetBathsQuery();\n  // Получаем брони\n  const {\n    data: reservations = [],\n    isLoading: isLoadingReservations,\n    error,\n    isError\n  } = useGetReservationsByDateQuery({\n    date: filters.date || today\n  }, {\n    refetchOnMountOrArgChange: false\n  });\n\n  // 🔍 ЛОГИ: проверяем, что пришло\n  console.log('🔍 [AdminReservations] baths:', baths);\n  console.log('🔍 [AdminReservations] reservations:', reservations);\n  console.log('🔍 [AdminReservations] filters.date:', filters.date);\n  if (bathsError) {\n    console.error('❌ Ошибка загрузки бань:', bathsError);\n  }\n\n  // Генерация временных слотов 9:00 - 23:30\n  const timeSlots = useMemo(() => {\n    if (!filters.date) return [];\n    const slots = [];\n    for (let hour = 9; hour < 24; hour++) {\n      for (let minute of [0, 30]) {\n        const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        const dateTime = new Date(`${filters.date}T${timeStr}:00`);\n        slots.push({\n          time: timeStr,\n          start: dateTime,\n          end: new Date(dateTime.getTime() + 30 * 60000)\n        });\n      }\n    }\n    return slots;\n  }, [filters.date]);\n\n  // Подготовка данных: для каждой бани — её брони на выбранную дату\n  const bathsToDisplay = useMemo(() => {\n    if (!Array.isArray(baths) || baths.length === 0) {\n      console.warn('⚠️ baths не массив или пуст:', baths);\n      return [];\n    }\n    const result = baths.map(bath => {\n      // 🔍 Проверяем структуру бани\n      console.log('🔍 Обрабатываем баню:', bath);\n      if (!(bath !== null && bath !== void 0 && bath.bath_id)) {\n        console.warn('⚠️ У бани отсутствует bath_id:', bath);\n        return null;\n      }\n      if (!(bath !== null && bath !== void 0 && bath.name)) {\n        console.warn('⚠️ У бани отсутствует name:', bath);\n        bath.name = 'Без названия';\n      }\n\n      // Фильтруем брони по bath_id и дате\n      const bookings = reservations.filter(res => {\n        if (!(res !== null && res !== void 0 && res.start_datetime)) {\n          console.warn('⚠️ У брони отсутствует start_datetime:', res);\n          return false;\n        }\n        const d = new Date(res.start_datetime);\n        if (isNaN(d.getTime())) {\n          console.warn('⚠️ Невалидная дата в брони:', res.start_datetime);\n          return false;\n        }\n        const resDate = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n        const matchesDate = resDate === filters.date;\n        const matchesBath = res.bath_id === bath.bath_id;\n        if (matchesBath && matchesDate) {\n          console.log(`✅ Бронь ID ${res.reservation_id} подошла для бани ${bath.bath_id} на дату ${filters.date}`);\n        }\n        return matchesBath && matchesDate;\n      });\n      return {\n        bath_id: bath.bath_id,\n        bathName: bath.name,\n        bookings: bookings,\n        hasBookings: bookings.length > 0\n      };\n    }).filter(Boolean); // Убираем null\n\n    console.log('📊 [bathsToDisplay] Итоговый массив:', result);\n    return result;\n  }, [filters.date, baths, reservations]);\n\n  // Обработчики\n  const handleApply = newFilters => {\n    console.log('📅 Применён фильтр:', newFilters);\n    setFilters(newFilters);\n  };\n  const handleViewBooking = booking => {\n    console.log('👁️ Просмотр брони:', booking);\n    setSelectedBooking(booking);\n  };\n  const handleEditBooking = booking => {\n    console.log('✏️ Редактировать бронь:', booking);\n    setSelectedBooking(null);\n  };\n  const handleDeleteBooking = id => {\n    if (window.confirm('Вы уверены, что хотите удалить эту бронь?')) {\n      console.log('🗑️ Удаление брони ID:', id);\n      setSelectedBooking(null);\n    }\n  };\n  const handleCloseModal = () => {\n    setSelectedBooking(null);\n  };\n  const handleAddBooking = newBooking => {\n    console.log('➕ Добавлена новая бронь:', newBooking);\n    newBooking.reservation_id = newBooking.reservation_id || Date.now();\n    setIsAddModalOpen(false);\n    setFilters(prev => ({\n      ...prev\n    })); // Триггер перерендера\n  };\n  const formatTime = date => {\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Обработка ошибок API\n  if (isError && error) {\n    console.error('❌ Ошибка загрузки бронирований:', error);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-red-50 border border-red-200 rounded-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-red-800\",\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-700 mt-2\",\n        children: error.status === 401 ? 'Не авторизован. Пожалуйста, войдите снова.' : error.message || 'Произошла ошибка'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), error.status === 401 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.removeItem('access_token');\n          window.location.href = '/admin/login';\n        },\n        className: \"mt-4 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\",\n        children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043B\\u043E\\u0433\\u0438\\u043D\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Индикация загрузки\n  if (isLoadingBaths || isLoadingReservations) {\n    console.log('⏳ Идёт загрузка данных...');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-16\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-800 mb-6\",\n      children: [\"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0438 \\u043D\\u0430 \", new Date(filters.date).toLocaleDateString('ru-RU', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReservationsFilters, {\n      onApply: handleApply,\n      onAddBooking: () => setIsAddModalOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto pb-4 -mx-4 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-flex space-x-6 min-h-[600px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-32 bg-gray-50 p-4 border-r border-gray-200 sticky top-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-medium text-gray-700 mb-2\",\n            children: \"\\u0412\\u0420\\u0415\\u041C\\u042F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), timeSlots.map((slot, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 py-2 h-14 flex items-center\",\n            children: formatTime(slot.start)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), bathsToDisplay.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 p-8\",\n          children: isLoadingBaths ? 'Загрузка бань...' : 'Нет доступных бань или не удалось сопоставить брони с датой'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this) : bathsToDisplay.map(bath => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-96\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl shadow-md border border-gray-200 overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 border-b border-gray-200 bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-800\",\n                children: bath.bathName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), !bath.hasBookings && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 bg-yellow-50 border-b border-yellow-200 text-center text-yellow-800 text-sm font-medium\",\n              children: \"\\u041D\\u0430 \\u044D\\u0442\\u0443 \\u0434\\u0430\\u0442\\u0443 \\u0431\\u0440\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full table-fixed border-separate border-spacing-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: timeSlots.map((slot, idx) => {\n                    const normalizedBookings = bath.bookings.map(booking => ({\n                      ...booking,\n                      start: new Date(booking.start_datetime),\n                      end: new Date(booking.end_datetime)\n                    }));\n                    const overlapping = normalizedBookings.find(res => res.start < slot.end && res.end > slot.start);\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"border-b border-gray-100 hover:bg-gray-25 transition-colors\",\n                      children: /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-0 relative bg-gray-50\",\n                        style: {\n                          height: '56px',\n                          overflow: 'visible'\n                        },\n                        children: overlapping ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"absolute inset-x-0 bg-red-50 border-4 border-blue-500 text-red-800 text-sm font-medium rounded-lg px-3 flex items-center justify-center cursor-pointer hover:shadow transition-all duration-200 group\",\n                          style: {\n                            top: 0,\n                            height: `${(overlapping.end - overlapping.start) / (30 * 60000) * 100}%`,\n                            zIndex: 10,\n                            overflow: 'visible'\n                          },\n                          title: `${overlapping.client_name} • ${formatTime(overlapping.start)} – ${formatTime(overlapping.end)}`,\n                          onClick: () => handleViewBooking(overlapping),\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"w-1 bg-red-400 rounded-full absolute left-0 top-1 bottom-1 group-hover:w-2 transition-all duration-200\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 273,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"truncate max-w-full text-center leading-tight font-medium\",\n                            children: overlapping.client_name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 274,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 262,\n                          columnNumber: 35\n                        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"absolute inset-0 flex items-center justify-center text-green-600 text-sm font-medium bg-green-50 rounded-lg border border-green-200\",\n                          children: \"\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 279,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 31\n                      }, this)\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)\n        }, bath.bath_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookingDetailsModal, {\n      booking: selectedBooking,\n      onClose: handleCloseModal,\n      onEdit: handleEditBooking,\n      onDelete: handleDeleteBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddBookingModal, {\n      isOpen: isAddModalOpen,\n      onClose: () => setIsAddModalOpen(false),\n      onAdd: handleAddBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminReservations, \"JtVc3MO7rBBH43nxONT7LYFtTGA=\", false, function () {\n  return [useGetBathsQuery, useGetReservationsByDateQuery];\n});\n_c = AdminReservations;\nexport default AdminReservations;\nvar _c;\n$RefreshReg$(_c, \"AdminReservations\");","map":{"version":3,"names":["useState","useMemo","ReservationsFilters","BookingDetailsModal","AddBookingModal","useGetBathsQuery","useGetReservationsByDateQuery","jsxDEV","_jsxDEV","AdminReservations","_s","today","Date","toISOString","split","filters","setFilters","date","selectedBooking","setSelectedBooking","isAddModalOpen","setIsAddModalOpen","baths","isLoading","isLoadingBaths","error","bathsError","isFetching","isFetchingBaths","data","reservations","isLoadingReservations","isError","refetchOnMountOrArgChange","console","log","timeSlots","slots","hour","minute","timeStr","toString","padStart","dateTime","push","time","start","end","getTime","bathsToDisplay","Array","isArray","length","warn","result","map","bath","bath_id","name","bookings","filter","res","start_datetime","d","isNaN","resDate","getFullYear","String","getMonth","getDate","matchesDate","matchesBath","reservation_id","bathName","hasBookings","Boolean","handleApply","newFilters","handleViewBooking","booking","handleEditBooking","handleDeleteBooking","id","window","confirm","handleCloseModal","handleAddBooking","newBooking","now","prev","formatTime","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","message","onClick","localStorage","removeItem","location","href","toLocaleDateString","day","month","year","onApply","onAddBooking","slot","idx","normalizedBookings","end_datetime","overlapping","find","style","height","overflow","top","zIndex","title","client_name","onClose","onEdit","onDelete","isOpen","onAdd","_c","$RefreshReg$"],"sources":["C:/Users/khram/Desktop/ilya/banya/frontend/my-banya/src/pages/Admin/Reservations/AdminReservations.jsx"],"sourcesContent":["import { useState, useMemo } from 'react';\r\nimport ReservationsFilters from '../Reservations/ReservationsFilters';\r\nimport BookingDetailsModal from '../Reservations/BookingDetailsModal';\r\nimport AddBookingModal from '../Reservations/AddBookingModal';\r\nimport { useGetBathsQuery, useGetReservationsByDateQuery } from '../../../redux/slices/apiSlice';\r\n\r\nfunction AdminReservations() {\r\n  const today = new Date().toISOString().split('T')[0];\r\n  const [filters, setFilters] = useState({ date: today });\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n\r\n  // Получаем бани\r\n  const {\r\n    baths = [],\r\n    isLoading: isLoadingBaths,\r\n    error: bathsError,\r\n    isFetching: isFetchingBaths\r\n  } = useGetBathsQuery();\r\n  // Получаем брони\r\n  const {\r\n    data: reservations = [],\r\n    isLoading: isLoadingReservations,\r\n    error,\r\n    isError\r\n  } = useGetReservationsByDateQuery(\r\n    { date: filters.date || today },\r\n    { refetchOnMountOrArgChange: false }\r\n  );\r\n\r\n  // 🔍 ЛОГИ: проверяем, что пришло\r\n  console.log('🔍 [AdminReservations] baths:', baths);\r\n  console.log('🔍 [AdminReservations] reservations:', reservations);\r\n  console.log('🔍 [AdminReservations] filters.date:', filters.date);\r\n\r\n  if (bathsError) {\r\n    console.error('❌ Ошибка загрузки бань:', bathsError);\r\n  }\r\n\r\n  // Генерация временных слотов 9:00 - 23:30\r\n  const timeSlots = useMemo(() => {\r\n    if (!filters.date) return [];\r\n    const slots = [];\r\n    for (let hour = 9; hour < 24; hour++) {\r\n      for (let minute of [0, 30]) {\r\n        const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n        const dateTime = new Date(`${filters.date}T${timeStr}:00`);\r\n        slots.push({\r\n          time: timeStr,\r\n          start: dateTime,\r\n          end: new Date(dateTime.getTime() + 30 * 60000),\r\n        });\r\n      }\r\n    }\r\n    return slots;\r\n  }, [filters.date]);\r\n\r\n  // Подготовка данных: для каждой бани — её брони на выбранную дату\r\n  const bathsToDisplay = useMemo(() => {\r\n    if (!Array.isArray(baths) || baths.length === 0) {\r\n      console.warn('⚠️ baths не массив или пуст:', baths);\r\n      return [];\r\n    }\r\n\r\n    const result = baths.map(bath => {\r\n      // 🔍 Проверяем структуру бани\r\n      console.log('🔍 Обрабатываем баню:', bath);\r\n\r\n      if (!bath?.bath_id) {\r\n        console.warn('⚠️ У бани отсутствует bath_id:', bath);\r\n        return null;\r\n      }\r\n\r\n      if (!bath?.name) {\r\n        console.warn('⚠️ У бани отсутствует name:', bath);\r\n        bath.name = 'Без названия';\r\n      }\r\n\r\n      // Фильтруем брони по bath_id и дате\r\n      const bookings = reservations.filter(res => {\r\n        if (!res?.start_datetime) {\r\n          console.warn('⚠️ У брони отсутствует start_datetime:', res);\r\n          return false;\r\n        }\r\n\r\n        const d = new Date(res.start_datetime);\r\n        if (isNaN(d.getTime())) {\r\n          console.warn('⚠️ Невалидная дата в брони:', res.start_datetime);\r\n          return false;\r\n        }\r\n\r\n        const resDate = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\r\n        const matchesDate = resDate === filters.date;\r\n        const matchesBath = res.bath_id === bath.bath_id;\r\n\r\n        if (matchesBath && matchesDate) {\r\n          console.log(`✅ Бронь ID ${res.reservation_id} подошла для бани ${bath.bath_id} на дату ${filters.date}`);\r\n        }\r\n\r\n        return matchesBath && matchesDate;\r\n      });\r\n\r\n      return {\r\n        bath_id: bath.bath_id,\r\n        bathName: bath.name,\r\n        bookings: bookings,\r\n        hasBookings: bookings.length > 0,\r\n      };\r\n    }).filter(Boolean); // Убираем null\r\n\r\n    console.log('📊 [bathsToDisplay] Итоговый массив:', result);\r\n    return result;\r\n  }, [filters.date, baths, reservations]);\r\n\r\n  // Обработчики\r\n  const handleApply = (newFilters) => {\r\n    console.log('📅 Применён фильтр:', newFilters);\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  const handleViewBooking = (booking) => {\r\n    console.log('👁️ Просмотр брони:', booking);\r\n    setSelectedBooking(booking);\r\n  };\r\n\r\n  const handleEditBooking = (booking) => {\r\n    console.log('✏️ Редактировать бронь:', booking);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleDeleteBooking = (id) => {\r\n    if (window.confirm('Вы уверены, что хотите удалить эту бронь?')) {\r\n      console.log('🗑️ Удаление брони ID:', id);\r\n      setSelectedBooking(null);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleAddBooking = (newBooking) => {\r\n    console.log('➕ Добавлена новая бронь:', newBooking);\r\n    newBooking.reservation_id = newBooking.reservation_id || Date.now();\r\n    setIsAddModalOpen(false);\r\n    setFilters(prev => ({ ...prev })); // Триггер перерендера\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return date.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  // Обработка ошибок API\r\n  if (isError && error) {\r\n    console.error('❌ Ошибка загрузки бронирований:', error);\r\n    return (\r\n      <div className=\"p-6 bg-red-50 border border-red-200 rounded-xl\">\r\n        <h3 className=\"text-lg font-medium text-red-800\">Ошибка загрузки</h3>\r\n        <p className=\"text-red-700 mt-2\">\r\n          {error.status === 401\r\n            ? 'Не авторизован. Пожалуйста, войдите снова.'\r\n            : error.message || 'Произошла ошибка'}\r\n        </p>\r\n        {error.status === 401 && (\r\n          <button\r\n            onClick={() => {\r\n              localStorage.removeItem('access_token');\r\n              window.location.href = '/admin/login';\r\n            }}\r\n            className=\"mt-4 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n          >\r\n            Перейти к логину\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Индикация загрузки\r\n  if (isLoadingBaths || isLoadingReservations) {\r\n    console.log('⏳ Идёт загрузка данных...');\r\n    return (\r\n      <div className=\"flex items-center justify-center py-16\">\r\n        <div className=\"text-gray-500\">Загрузка данных...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n        Записи на {new Date(filters.date).toLocaleDateString('ru-RU', {\r\n          day: 'numeric',\r\n          month: 'long',\r\n          year: 'numeric',\r\n        })}\r\n      </h2>\r\n\r\n      <ReservationsFilters\r\n        onApply={handleApply}\r\n        onAddBooking={() => setIsAddModalOpen(true)}\r\n      />\r\n\r\n      <div className=\"overflow-x-auto pb-4 -mx-4 px-4\">\r\n        <div className=\"inline-flex space-x-6 min-h-[600px]\">\r\n          {/* Колонка времени */}\r\n          <div className=\"flex-shrink-0 w-32 bg-gray-50 p-4 border-r border-gray-200 sticky top-0\">\r\n            <div className=\"text-sm font-medium text-gray-700 mb-2\">ВРЕМЯ</div>\r\n            {timeSlots.map((slot, idx) => (\r\n              <div key={idx} className=\"text-sm text-gray-600 py-2 h-14 flex items-center\">\r\n                {formatTime(slot.start)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Колонки с банями */}\r\n          {bathsToDisplay.length === 0 ? (\r\n            <div className=\"text-gray-500 p-8\">\r\n              {isLoadingBaths ? 'Загрузка бань...' : 'Нет доступных бань или не удалось сопоставить брони с датой'}\r\n            </div>\r\n          ) : (\r\n            bathsToDisplay.map((bath) => (\r\n              <div key={bath.bath_id} className=\"flex-shrink-0 w-96\">\r\n                <div className=\"bg-white rounded-xl shadow-md border border-gray-200 overflow-hidden\">\r\n                  <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-800\">{bath.bathName}</h3>\r\n                  </div>\r\n\r\n                  {/* Информационное сообщение, если броней нет */}\r\n                  {!bath.hasBookings && (\r\n                    <div className=\"p-3 bg-yellow-50 border-b border-yellow-200 text-center text-yellow-800 text-sm font-medium\">\r\n                      На эту дату бронирований нет\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Таблица временных слотов — всегда отображается */}\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full table-fixed border-separate border-spacing-0\">\r\n                      <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Статус\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {timeSlots.map((slot, idx) => {\r\n                          const normalizedBookings = bath.bookings.map(booking => ({\r\n                            ...booking,\r\n                            start: new Date(booking.start_datetime),\r\n                            end: new Date(booking.end_datetime),\r\n                          }));\r\n\r\n                          const overlapping = normalizedBookings.find((res) =>\r\n                            res.start < slot.end && res.end > slot.start\r\n                          );\r\n\r\n                          return (\r\n                            <tr key={idx} className=\"border-b border-gray-100 hover:bg-gray-25 transition-colors\">\r\n                              <td className=\"px-6 py-0 relative bg-gray-50\" style={{ height: '56px', overflow: 'visible' }}>\r\n                                {overlapping ? (\r\n                                  <div\r\n                                    className=\"absolute inset-x-0 bg-red-50 border-4 border-blue-500 text-red-800 text-sm font-medium rounded-lg px-3 flex items-center justify-center cursor-pointer hover:shadow transition-all duration-200 group\"\r\n                                    style={{\r\n                                      top: 0,\r\n                                      height: `${((overlapping.end - overlapping.start) / (30 * 60000)) * 100}%`,\r\n                                      zIndex: 10,\r\n                                      overflow: 'visible',\r\n                                    }}\r\n                                    title={`${overlapping.client_name} • ${formatTime(overlapping.start)} – ${formatTime(overlapping.end)}`}\r\n                                    onClick={() => handleViewBooking(overlapping)}\r\n                                  >\r\n                                    <div className=\"w-1 bg-red-400 rounded-full absolute left-0 top-1 bottom-1 group-hover:w-2 transition-all duration-200\"></div>\r\n                                    <span className=\"truncate max-w-full text-center leading-tight font-medium\">\r\n                                      {overlapping.client_name}\r\n                                    </span>\r\n                                  </div>\r\n                                ) : (\r\n                                  <div className=\"absolute inset-0 flex items-center justify-center text-green-600 text-sm font-medium bg-green-50 rounded-lg border border-green-200\">\r\n                                    Свободно\r\n                                  </div>\r\n                                )}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Модальные окна */}\r\n      <BookingDetailsModal\r\n        booking={selectedBooking}\r\n        onClose={handleCloseModal}\r\n        onEdit={handleEditBooking}\r\n        onDelete={handleDeleteBooking}\r\n      />\r\n\r\n      <AddBookingModal\r\n        isOpen={isAddModalOpen}\r\n        onClose={() => setIsAddModalOpen(false)}\r\n        onAdd={handleAddBooking}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminReservations;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACzC,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAASC,gBAAgB,EAAEC,6BAA6B,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjG,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,IAAI,EAAEN;EAAM,CAAC,CAAC;EACvD,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAM;IACJsB,KAAK,GAAG,EAAE;IACVC,SAAS,EAAEC,cAAc;IACzBC,KAAK,EAAEC,UAAU;IACjBC,UAAU,EAAEC;EACd,CAAC,GAAGvB,gBAAgB,CAAC,CAAC;EACtB;EACA,MAAM;IACJwB,IAAI,EAAEC,YAAY,GAAG,EAAE;IACvBP,SAAS,EAAEQ,qBAAqB;IAChCN,KAAK;IACLO;EACF,CAAC,GAAG1B,6BAA6B,CAC/B;IAAEW,IAAI,EAAEF,OAAO,CAACE,IAAI,IAAIN;EAAM,CAAC,EAC/B;IAAEsB,yBAAyB,EAAE;EAAM,CACrC,CAAC;;EAED;EACAC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEb,KAAK,CAAC;EACnDY,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEL,YAAY,CAAC;EACjEI,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEpB,OAAO,CAACE,IAAI,CAAC;EAEjE,IAAIS,UAAU,EAAE;IACdQ,OAAO,CAACT,KAAK,CAAC,yBAAyB,EAAEC,UAAU,CAAC;EACtD;;EAEA;EACA,MAAMU,SAAS,GAAGnC,OAAO,CAAC,MAAM;IAC9B,IAAI,CAACc,OAAO,CAACE,IAAI,EAAE,OAAO,EAAE;IAC5B,MAAMoB,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIC,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,EAAE,EAAEA,IAAI,EAAE,EAAE;MACpC,KAAK,IAAIC,MAAM,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;QAC1B,MAAMC,OAAO,GAAG,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIH,MAAM,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;QAC3F,MAAMC,QAAQ,GAAG,IAAI/B,IAAI,CAAC,GAAGG,OAAO,CAACE,IAAI,IAAIuB,OAAO,KAAK,CAAC;QAC1DH,KAAK,CAACO,IAAI,CAAC;UACTC,IAAI,EAAEL,OAAO;UACbM,KAAK,EAAEH,QAAQ;UACfI,GAAG,EAAE,IAAInC,IAAI,CAAC+B,QAAQ,CAACK,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK;QAC/C,CAAC,CAAC;MACJ;IACF;IACA,OAAOX,KAAK;EACd,CAAC,EAAE,CAACtB,OAAO,CAACE,IAAI,CAAC,CAAC;;EAElB;EACA,MAAMgC,cAAc,GAAGhD,OAAO,CAAC,MAAM;IACnC,IAAI,CAACiD,KAAK,CAACC,OAAO,CAAC7B,KAAK,CAAC,IAAIA,KAAK,CAAC8B,MAAM,KAAK,CAAC,EAAE;MAC/ClB,OAAO,CAACmB,IAAI,CAAC,8BAA8B,EAAE/B,KAAK,CAAC;MACnD,OAAO,EAAE;IACX;IAEA,MAAMgC,MAAM,GAAGhC,KAAK,CAACiC,GAAG,CAACC,IAAI,IAAI;MAC/B;MACAtB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEqB,IAAI,CAAC;MAE1C,IAAI,EAACA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,OAAO,GAAE;QAClBvB,OAAO,CAACmB,IAAI,CAAC,gCAAgC,EAAEG,IAAI,CAAC;QACpD,OAAO,IAAI;MACb;MAEA,IAAI,EAACA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEE,IAAI,GAAE;QACfxB,OAAO,CAACmB,IAAI,CAAC,6BAA6B,EAAEG,IAAI,CAAC;QACjDA,IAAI,CAACE,IAAI,GAAG,cAAc;MAC5B;;MAEA;MACA,MAAMC,QAAQ,GAAG7B,YAAY,CAAC8B,MAAM,CAACC,GAAG,IAAI;QAC1C,IAAI,EAACA,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEC,cAAc,GAAE;UACxB5B,OAAO,CAACmB,IAAI,CAAC,wCAAwC,EAAEQ,GAAG,CAAC;UAC3D,OAAO,KAAK;QACd;QAEA,MAAME,CAAC,GAAG,IAAInD,IAAI,CAACiD,GAAG,CAACC,cAAc,CAAC;QACtC,IAAIE,KAAK,CAACD,CAAC,CAACf,OAAO,CAAC,CAAC,CAAC,EAAE;UACtBd,OAAO,CAACmB,IAAI,CAAC,6BAA6B,EAAEQ,GAAG,CAACC,cAAc,CAAC;UAC/D,OAAO,KAAK;QACd;QAEA,MAAMG,OAAO,GAAG,GAAGF,CAAC,CAACG,WAAW,CAAC,CAAC,IAAIC,MAAM,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC1B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIyB,MAAM,CAACJ,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC3B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;QACzH,MAAM4B,WAAW,GAAGL,OAAO,KAAKlD,OAAO,CAACE,IAAI;QAC5C,MAAMsD,WAAW,GAAGV,GAAG,CAACJ,OAAO,KAAKD,IAAI,CAACC,OAAO;QAEhD,IAAIc,WAAW,IAAID,WAAW,EAAE;UAC9BpC,OAAO,CAACC,GAAG,CAAC,cAAc0B,GAAG,CAACW,cAAc,qBAAqBhB,IAAI,CAACC,OAAO,YAAY1C,OAAO,CAACE,IAAI,EAAE,CAAC;QAC1G;QAEA,OAAOsD,WAAW,IAAID,WAAW;MACnC,CAAC,CAAC;MAEF,OAAO;QACLb,OAAO,EAAED,IAAI,CAACC,OAAO;QACrBgB,QAAQ,EAAEjB,IAAI,CAACE,IAAI;QACnBC,QAAQ,EAAEA,QAAQ;QAClBe,WAAW,EAAEf,QAAQ,CAACP,MAAM,GAAG;MACjC,CAAC;IACH,CAAC,CAAC,CAACQ,MAAM,CAACe,OAAO,CAAC,CAAC,CAAC;;IAEpBzC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEmB,MAAM,CAAC;IAC3D,OAAOA,MAAM;EACf,CAAC,EAAE,CAACvC,OAAO,CAACE,IAAI,EAAEK,KAAK,EAAEQ,YAAY,CAAC,CAAC;;EAEvC;EACA,MAAM8C,WAAW,GAAIC,UAAU,IAAK;IAClC3C,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE0C,UAAU,CAAC;IAC9C7D,UAAU,CAAC6D,UAAU,CAAC;EACxB,CAAC;EAED,MAAMC,iBAAiB,GAAIC,OAAO,IAAK;IACrC7C,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE4C,OAAO,CAAC;IAC3C5D,kBAAkB,CAAC4D,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMC,iBAAiB,GAAID,OAAO,IAAK;IACrC7C,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE4C,OAAO,CAAC;IAC/C5D,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAM8D,mBAAmB,GAAIC,EAAE,IAAK;IAClC,IAAIC,MAAM,CAACC,OAAO,CAAC,2CAA2C,CAAC,EAAE;MAC/DlD,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE+C,EAAE,CAAC;MACzC/D,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC;EAED,MAAMkE,gBAAgB,GAAGA,CAAA,KAAM;IAC7BlE,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMmE,gBAAgB,GAAIC,UAAU,IAAK;IACvCrD,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEoD,UAAU,CAAC;IACnDA,UAAU,CAACf,cAAc,GAAGe,UAAU,CAACf,cAAc,IAAI5D,IAAI,CAAC4E,GAAG,CAAC,CAAC;IACnEnE,iBAAiB,CAAC,KAAK,CAAC;IACxBL,UAAU,CAACyE,IAAI,KAAK;MAAE,GAAGA;IAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,UAAU,GAAIzE,IAAI,IAAK;IAC3B,OAAOA,IAAI,CAAC0E,kBAAkB,CAAC,OAAO,EAAE;MAAErD,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;EACjF,CAAC;;EAED;EACA,IAAIP,OAAO,IAAIP,KAAK,EAAE;IACpBS,OAAO,CAACT,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,oBACEjB,OAAA;MAAKoF,SAAS,EAAC,gDAAgD;MAAAC,QAAA,gBAC7DrF,OAAA;QAAIoF,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrEzF,OAAA;QAAGoF,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC7BpE,KAAK,CAACyE,MAAM,KAAK,GAAG,GACjB,4CAA4C,GAC5CzE,KAAK,CAAC0E,OAAO,IAAI;MAAkB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,EACHxE,KAAK,CAACyE,MAAM,KAAK,GAAG,iBACnB1F,OAAA;QACE4F,OAAO,EAAEA,CAAA,KAAM;UACbC,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC;UACvCnB,MAAM,CAACoB,QAAQ,CAACC,IAAI,GAAG,cAAc;QACvC,CAAE;QACFZ,SAAS,EAAC,kEAAkE;QAAAC,QAAA,EAC7E;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;;EAEA;EACA,IAAIzE,cAAc,IAAIO,qBAAqB,EAAE;IAC3CG,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,oBACE3B,OAAA;MAAKoF,SAAS,EAAC,wCAAwC;MAAAC,QAAA,eACrDrF,OAAA;QAAKoF,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAEV;EAEA,oBACEzF,OAAA;IAAKoF,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrF,OAAA;MAAIoF,SAAS,EAAC,2CAA2C;MAAAC,QAAA,GAAC,oDAC9C,EAAC,IAAIjF,IAAI,CAACG,OAAO,CAACE,IAAI,CAAC,CAACwF,kBAAkB,CAAC,OAAO,EAAE;QAC5DC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE;MACR,CAAC,CAAC;IAAA;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELzF,OAAA,CAACN,mBAAmB;MAClB2G,OAAO,EAAEjC,WAAY;MACrBkC,YAAY,EAAEA,CAAA,KAAMzF,iBAAiB,CAAC,IAAI;IAAE;MAAAyE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAEFzF,OAAA;MAAKoF,SAAS,EAAC,iCAAiC;MAAAC,QAAA,eAC9CrF,OAAA;QAAKoF,SAAS,EAAC,qCAAqC;QAAAC,QAAA,gBAElDrF,OAAA;UAAKoF,SAAS,EAAC,yEAAyE;UAAAC,QAAA,gBACtFrF,OAAA;YAAKoF,SAAS,EAAC,wCAAwC;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAClE7D,SAAS,CAACmB,GAAG,CAAC,CAACwD,IAAI,EAAEC,GAAG,kBACvBxG,OAAA;YAAeoF,SAAS,EAAC,mDAAmD;YAAAC,QAAA,EACzEH,UAAU,CAACqB,IAAI,CAACjE,KAAK;UAAC,GADfkE,GAAG;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EAGLhD,cAAc,CAACG,MAAM,KAAK,CAAC,gBAC1B5C,OAAA;UAAKoF,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAC/BrE,cAAc,GAAG,kBAAkB,GAAG;QAA6D;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjG,CAAC,GAENhD,cAAc,CAACM,GAAG,CAAEC,IAAI,iBACtBhD,OAAA;UAAwBoF,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACpDrF,OAAA;YAAKoF,SAAS,EAAC,sEAAsE;YAAAC,QAAA,gBACnFrF,OAAA;cAAKoF,SAAS,EAAC,yCAAyC;cAAAC,QAAA,eACtDrF,OAAA;gBAAIoF,SAAS,EAAC,qCAAqC;gBAAAC,QAAA,EAAErC,IAAI,CAACiB;cAAQ;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC,EAGL,CAACzC,IAAI,CAACkB,WAAW,iBAChBlE,OAAA;cAAKoF,SAAS,EAAC,6FAA6F;cAAAC,QAAA,EAAC;YAE7G;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACN,eAGDzF,OAAA;cAAKoF,SAAS,EAAC,iBAAiB;cAAAC,QAAA,eAC9BrF,OAAA;gBAAOoF,SAAS,EAAC,qDAAqD;gBAAAC,QAAA,gBACpErF,OAAA;kBAAOoF,SAAS,EAAC,YAAY;kBAAAC,QAAA,eAC3BrF,OAAA;oBAAAqF,QAAA,eACErF,OAAA;sBAAIoF,SAAS,EAAC,gFAAgF;sBAAAC,QAAA,EAAC;oBAE/F;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACRzF,OAAA;kBAAAqF,QAAA,EACGzD,SAAS,CAACmB,GAAG,CAAC,CAACwD,IAAI,EAAEC,GAAG,KAAK;oBAC5B,MAAMC,kBAAkB,GAAGzD,IAAI,CAACG,QAAQ,CAACJ,GAAG,CAACwB,OAAO,KAAK;sBACvD,GAAGA,OAAO;sBACVjC,KAAK,EAAE,IAAIlC,IAAI,CAACmE,OAAO,CAACjB,cAAc,CAAC;sBACvCf,GAAG,EAAE,IAAInC,IAAI,CAACmE,OAAO,CAACmC,YAAY;oBACpC,CAAC,CAAC,CAAC;oBAEH,MAAMC,WAAW,GAAGF,kBAAkB,CAACG,IAAI,CAAEvD,GAAG,IAC9CA,GAAG,CAACf,KAAK,GAAGiE,IAAI,CAAChE,GAAG,IAAIc,GAAG,CAACd,GAAG,GAAGgE,IAAI,CAACjE,KACzC,CAAC;oBAED,oBACEtC,OAAA;sBAAcoF,SAAS,EAAC,6DAA6D;sBAAAC,QAAA,eACnFrF,OAAA;wBAAIoF,SAAS,EAAC,+BAA+B;wBAACyB,KAAK,EAAE;0BAAEC,MAAM,EAAE,MAAM;0BAAEC,QAAQ,EAAE;wBAAU,CAAE;wBAAA1B,QAAA,EAC1FsB,WAAW,gBACV3G,OAAA;0BACEoF,SAAS,EAAC,uMAAuM;0BACjNyB,KAAK,EAAE;4BACLG,GAAG,EAAE,CAAC;4BACNF,MAAM,EAAE,GAAI,CAACH,WAAW,CAACpE,GAAG,GAAGoE,WAAW,CAACrE,KAAK,KAAK,EAAE,GAAG,KAAK,CAAC,GAAI,GAAG,GAAG;4BAC1E2E,MAAM,EAAE,EAAE;4BACVF,QAAQ,EAAE;0BACZ,CAAE;0BACFG,KAAK,EAAE,GAAGP,WAAW,CAACQ,WAAW,MAAMjC,UAAU,CAACyB,WAAW,CAACrE,KAAK,CAAC,MAAM4C,UAAU,CAACyB,WAAW,CAACpE,GAAG,CAAC,EAAG;0BACxGqD,OAAO,EAAEA,CAAA,KAAMtB,iBAAiB,CAACqC,WAAW,CAAE;0BAAAtB,QAAA,gBAE9CrF,OAAA;4BAAKoF,SAAS,EAAC;0BAAwG;4BAAAE,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,eAC9HzF,OAAA;4BAAMoF,SAAS,EAAC,2DAA2D;4BAAAC,QAAA,EACxEsB,WAAW,CAACQ;0BAAW;4BAAA7B,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACpB,CAAC;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACJ,CAAC,gBAENzF,OAAA;0BAAKoF,SAAS,EAAC,qIAAqI;0BAAAC,QAAA,EAAC;wBAErJ;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAK;sBACN;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACC;oBAAC,GAxBEe,GAAG;sBAAAlB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAyBR,CAAC;kBAET,CAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAnEEzC,IAAI,CAACC,OAAO;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoEjB,CACN,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNzF,OAAA,CAACL,mBAAmB;MAClB4E,OAAO,EAAE7D,eAAgB;MACzB0G,OAAO,EAAEvC,gBAAiB;MAC1BwC,MAAM,EAAE7C,iBAAkB;MAC1B8C,QAAQ,EAAE7C;IAAoB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eAEFzF,OAAA,CAACJ,eAAe;MACd2H,MAAM,EAAE3G,cAAe;MACvBwG,OAAO,EAAEA,CAAA,KAAMvG,iBAAiB,CAAC,KAAK,CAAE;MACxC2G,KAAK,EAAE1C;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvF,EAAA,CAjTQD,iBAAiB;EAAA,QAYpBJ,gBAAgB,EAOhBC,6BAA6B;AAAA;AAAA2H,EAAA,GAnB1BxH,iBAAiB;AAmT1B,eAAeA,iBAAiB;AAAC,IAAAwH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}