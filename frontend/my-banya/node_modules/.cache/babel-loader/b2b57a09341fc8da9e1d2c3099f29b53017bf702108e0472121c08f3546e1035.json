{"ast":null,"code":"import _defineProperty from \"C:/Users/khram/Desktop/ilya/banya/frontend/my-banya/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// src/getDotPath/getDotPath.ts\nfunction getDotPath(issue) {\n  var _issue$path;\n  if ((_issue$path = issue.path) !== null && _issue$path !== void 0 && _issue$path.length) {\n    let dotPath = \"\";\n    for (const item of issue.path) {\n      const key = typeof item === \"object\" ? item.key : item;\n      if (typeof key === \"string\" || typeof key === \"number\") {\n        if (dotPath) {\n          dotPath += \".\".concat(key);\n        } else {\n          dotPath += key;\n        }\n      } else {\n        return null;\n      }\n    }\n    return dotPath;\n  }\n  return null;\n}\n\n// src/SchemaError/SchemaError.ts\nvar SchemaError = class SchemaError extends Error {\n  /**\n   * Creates a schema error with useful information.\n   *\n   * @param issues The schema issues.\n   */\n  constructor(issues) {\n    super(issues[0].message);\n    /**\n     * The schema issues.\n     */\n    _defineProperty(this, \"issues\", void 0);\n    this.name = \"SchemaError\";\n    this.issues = issues;\n  }\n};\nexport { SchemaError, getDotPath };","map":{"version":3,"names":["getDotPath","issue","_issue$path","path","length","dotPath","item","key","concat","SchemaError","Error","constructor","issues","message","_defineProperty","name"],"sources":["C:/Users/khram/Desktop/ilya/banya/frontend/my-banya/node_modules/@standard-schema/utils/dist/index.js"],"sourcesContent":["// src/getDotPath/getDotPath.ts\nfunction getDotPath(issue) {\n  if (issue.path?.length) {\n    let dotPath = \"\";\n    for (const item of issue.path) {\n      const key = typeof item === \"object\" ? item.key : item;\n      if (typeof key === \"string\" || typeof key === \"number\") {\n        if (dotPath) {\n          dotPath += `.${key}`;\n        } else {\n          dotPath += key;\n        }\n      } else {\n        return null;\n      }\n    }\n    return dotPath;\n  }\n  return null;\n}\n\n// src/SchemaError/SchemaError.ts\nvar SchemaError = class extends Error {\n  /**\n   * The schema issues.\n   */\n  issues;\n  /**\n   * Creates a schema error with useful information.\n   *\n   * @param issues The schema issues.\n   */\n  constructor(issues) {\n    super(issues[0].message);\n    this.name = \"SchemaError\";\n    this.issues = issues;\n  }\n};\nexport {\n  SchemaError,\n  getDotPath\n};\n"],"mappings":";AAAA;AACA,SAASA,UAAUA,CAACC,KAAK,EAAE;EAAA,IAAAC,WAAA;EACzB,KAAAA,WAAA,GAAID,KAAK,CAACE,IAAI,cAAAD,WAAA,eAAVA,WAAA,CAAYE,MAAM,EAAE;IACtB,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,MAAMC,IAAI,IAAIL,KAAK,CAACE,IAAI,EAAE;MAC7B,MAAMI,GAAG,GAAG,OAAOD,IAAI,KAAK,QAAQ,GAAGA,IAAI,CAACC,GAAG,GAAGD,IAAI;MACtD,IAAI,OAAOC,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;QACtD,IAAIF,OAAO,EAAE;UACXA,OAAO,QAAAG,MAAA,CAAQD,GAAG,CAAE;QACtB,CAAC,MAAM;UACLF,OAAO,IAAIE,GAAG;QAChB;MACF,CAAC,MAAM;QACL,OAAO,IAAI;MACb;IACF;IACA,OAAOF,OAAO;EAChB;EACA,OAAO,IAAI;AACb;;AAEA;AACA,IAAII,WAAW,GAAG,MAAdA,WAAW,SAAiBC,KAAK,CAAC;EAKpC;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAACC,MAAM,EAAE;IAClB,KAAK,CAACA,MAAM,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC;IAV1B;AACF;AACA;IAFEC,eAAA;IAWE,IAAI,CAACC,IAAI,GAAG,aAAa;IACzB,IAAI,CAACH,MAAM,GAAGA,MAAM;EACtB;AACF,CAAC;AACD,SACEH,WAAW,EACXT,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}